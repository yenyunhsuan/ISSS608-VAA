[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "Author\nYen Yun Hsuan (Tina)\n\nLinkedIn\nEmail"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1 Introduction to Visual Analytics",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nlibrary(readr)\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#bar-chart",
    "title": "Hands-on Exercise 1 Introduction to Visual Analytics",
    "section": "Bar chart",
    "text": "Bar chart\n\nggplot(data=exam_data,\n       aes(x=RACE))+\n  geom_bar()\n\n\n\n\n\nHorizontal bar chart\nUse coordinate to change bar into horizontal\n\nggplot(data=exam_data,\n       aes(x=RACE))+\n  geom_bar()+\n  coord_flip()+\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#histogram",
    "title": "Hands-on Exercise 1 Introduction to Visual Analytics",
    "section": "Histogram",
    "text": "Histogram\n\nhist(exam_data$MATHS)\n\n\n\n\ndefault setting of bins are 30\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=10, \n                color='red',\n                 fill='blue')+\n  ggtitle(\"Histogram\")\n\n\n\n\n\nggplot(data=exam_data,aes(x=MATHS,fill=GENDER))+\n  geom_histogram(bins=20, color=\"grey30\")#color in histogram is bin line color"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#density-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#density-plot",
    "title": "Hands-on Exercise 1 Introduction to Visual Analytics",
    "section": "Density plot",
    "text": "Density plot\nit is a good way to replace histogram for continuous data if its distribution is smooth\n\nggplot(data=exam_data,aes(x=MATHS,colour=GENDER))+\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#dotplot",
    "title": "Hands-on Exercise 1 Introduction to Visual Analytics",
    "section": "Dotplot",
    "text": "Dotplot\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot(dotsize=0.5,binwidth = 3)+\n  scale_y_continuous(NULL,breaks = NULL) #remove y-axis value"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-and-notch",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-and-notch",
    "title": "Hands-on Exercise 1 Introduction to Visual Analytics",
    "section": "Boxplot and Notch",
    "text": "Boxplot and Notch\nNotch(缺口) can check by whether notches are overlapping to see whether medians are the same\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin-plot",
    "title": "Hands-on Exercise 1 Introduction to Visual Analytics",
    "section": "Violin Plot",
    "text": "Violin Plot\nCan compare more clearly about the difference of distributions of multiple data\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatter-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatter-plot",
    "title": "Hands-on Exercise 1 Introduction to Visual Analytics",
    "section": "Scatter plot",
    "text": "Scatter plot\n\nggplot(data=exam_data,aes(x=ENGLISH,y=MATHS))+\n  geom_point()+\n  geom_smooth()+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\nCombine scatter and boxplot\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_point(position=\"jitter\",size=0.2)+\n  geom_boxplot()\n\n\n\n\n\n\nStatistical summary\nAdd statistical summary can use stat_summary or overwrite by a new geom_ setting\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_point(position='jitter')+\n  geom_boxplot()+\n  stat_summary(geom=\"point\",fun='mean',color='red',size=4)\n\n\n\n\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_boxplot()+\n  geom_point(stat=\"summary\",        \n             colour =\"red\",          \n             size=4)\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#create-2d-panel",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#create-2d-panel",
    "title": "Hands-on Exercise 1 Introduction to Visual Analytics",
    "section": "Create 2D panel",
    "text": "Create 2D panel\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20)+\n  facet_wrap(~CLASS)\n\n\n\n\n\nFacet_grid\nTwo discrete variables can use facet_grid\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20)+\n  facet_grid(~CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "exam_data <- read.csv(\"data/Exam_data.csv\")\n\n\nggrepel\nAn extension of ggplot that can deal with overlapping text For example, add “_repel” to geom_label\n\nggplot(data=exam_data,aes(x=MATHS,y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method=lm,linewidth=0.5)+\n  geom_label_repel(aes(label=ID),fontface='bold')+ \n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))+ \n  ggtitle('English scores versus Maths scores for Primary 3\"')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\nggplot theme\n\np1 <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color='grey25',\n                 fill='grey90')+\n  theme_gray()+\n  ggtitle(\"Distribution of math scores\")\np1\n\n\n\n\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color='grey25',\n                 fill='grey90')+\n  theme_economist()+\n  ggtitle(\"Distribution of math scores\")\n\n\n\n\n\n\nWorking with hrbthems package\nMore fonts and label placements choices, adjust by axis_title size, base_size, axis_text_size\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20,boundary=100,\n                 fill='grey25',\n                 color='grey90')+\n  ggtitle(\"Distribution of math scores\")+\n  theme_ipsum(axis_title_size = 20,base_size=20,grid='Y') \n\n\n\n\n\n\nBeyond Single Graph\n\np2 <- ggplot(data=exam_data,aes(x=ENGLISH))+\n  geom_histogram(bins=20, boundary=100,fill='grey20',color='grey90')+\n  ggtitle(\"Distribution of English score\")+\n  coord_cartesian(xlim=c(0,100))\np2\n\n\n\n\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\np3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nCombining two ggplot2 graphs\n\np1|p2\n\n\n\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting\n\n\nAdd tag\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nPlace plots on top of below other plots\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nUse patchwork and ggtheme\n\npatchwork <- p3| (p1 / p2)\npatchwork & theme_economist()+theme(plot.title = element_text(size = 9))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data",
    "title": "Hands-on_Ex03",
    "section": "Import data",
    "text": "Import data\n\nexam_data <- read.csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graph-with-ggiraphtooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graph-with-ggiraphtooltip",
    "title": "Hands-on_Ex03",
    "section": "Interactive graph with ggiraph,tooltip",
    "text": "Interactive graph with ggiraph,tooltip\n\nTooltip effect with tooltip aesthetic\n\nTooltip: show label when mouse scroll on it\nhistodot: dot stacks vertically\nsvg: Scalable Vector Graphics(adjust size so can with good resolution) for html page\nratio of 0.618 is a recommended ratio for visually pleasing\n\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(tooltip=ID),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method='histodot')+\n    scale_y_continuous(NULL,breaks=NULL)\ngirafe(\n  ggobj=plot,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\nDisplaying multiple information\n\nUse “$” to extract specific column from dataframe\n“paste0” to concatenate string\n\n\nexam_data$tooltip <- c(paste0(\n  \"Name =\", exam_data$ID, \"\\n Class =\", exam_data$CLASS\n))\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(tooltip=exam_data$tooltip),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method='histodot')+\n    scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\nWarning: Use of `exam_data$tooltip` is discouraged.\nℹ Use `tooltip` instead.\n\n\n\n\n\n\n\n\nCustomising Tooltip\nUse opts_tooltip() to customize interactive label s font and color\n\ntooltip_css <- \"background-color:white;\nfont-style:bold; color:blue;\"\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(tooltip=ID),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method=\"histodot\")+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(\n      css=tooltip_css))\n)\n\n\n\n\n\n\n\nDisplaying statistics\n\naccuracy: 0.01 means to round to two decimal places\nymax: upper limit of 90% interval of y, y: average\nscales::number is to format value with accuracy (0.01)\nafter_stat:tooltip applied after calculating statistic values\nfun.data: summary statistics, mean_se:calculate mean and standard error\n\n\ntooltip <- function(y,ymax,accuracy=0.001){\n  mean <- scales::number(y,accuracy=accuracy)\n  se <- scales::number(ymax-y,accuracy = accuracy)\n  paste0(\"Mean math scores\",mean,\" +/- \",se)\n}\n\ngg_point <- ggplot(data=exam_data,aes(x=RACE)\n               )+\n  stat_summary(aes(y=MATHS,\n                   tooltip=after_stat(\n                     tooltip(y,ymax))),\n  fun.data=\"mean_se\",\n  geom=GeomInteractiveCol,\n  fill=\"lightblue\"\n    )+\n  stat_summary(aes(y=MATHS),\n  fun.data=\"mean_se\",\n  geom=\"errorbar\",width=0.2,size=0.2)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(\n  ggobj=gg_point,\n  width_svg = 8,\n  height_svg = 8*0.6188)\n\n\n\n\n\n\n\nHighlight effect\ndata_id allows highlighting effect on dotplot with defined category, default setting is filling with orange color.\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(data_id=CLASS),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method=\"histodot\")+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg = 6,\n  height_svg=6*0.618\n)\n\n\n\n\n\n\n\nChanging hovering color setting\nopacity: changing the transparency, opacity=0.2 means with 80% transparency\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(data_id=CLASS),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method=\"histodot\")+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg = 6,\n  height_svg=6*0.618,\n  options = list(\n    opts_hover(css=\"fill: #202020;\"),\n    opts_hover_inv(css=\"opacity:0.1;\")\n    \n  )\n)\n\n\n\n\n\n\n\nCombine tooltip(label) and hovering effect\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(\n    aes(tooltip=CLASS,data_id=CLASS),\n    stackgroups=TRUE,\n    binwidth=2,\n    method=\"histodot\"\n  )+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg=6,\n  height_svg=6*0.618,\n  options = list(\n    opts_hover(css=\"fill:#202020;\"),\n    opts_hover_inv(css=\"opacity:0.2;\")\n  )\n  \n)\n\n\n\n\n\n\n\nInsert link on the graph\n\nadd onclick column to exam_data\nsprintf: combine new string with URL\n“%s%s”, first %s is the link, second %s is new adding string\nas.character: convert to character(string) type, and adding to URL\n\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n \"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\n as.character(exam_data$ID))\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(\n    aes(onclick=onclick),\n    stackgroups=TRUE,\n    binwidth=2,\n    method=\"histodot\"\n  )+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg=6,\n  height_svg=6*0.618\n  \n)\n\n\n\n\n\n\n\nCoordinate multiple views\n\nopts_hover: setting about hovering point\nopts_hover_inv: setting for other part when hovering\n\n\nplot1 <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(\n    aes(data_id=ID),\n    stackgroups=TRUE,\n    binwidth=2,\n    method=\"histodot\"\n  )+\n  coord_cartesian(xlim=c(0,100))+\n  scale_y_continuous(NULL,breaks=NULL)\n\nplot2 <- ggplot(data=exam_data,aes(x=ENGLISH))+\n  geom_dotplot_interactive(\n    aes(data_id=ID),\n    stackgroups=TRUE,\n    binwidth=2,\n    method=\"histodot\"\n  )+\n  coord_cartesian(xlim=c(0,100))+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(code = print(plot1+plot2),\n  width_svg=6,\n  height_svg=3,\n  options=list(\n    opts_hover(css=\"fill: #202020;\"),\n    opts_hover_inv(css=\"opacity:0.2;\")\n  \n))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graphs-by-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graphs-by-plotly",
    "title": "Hands-on_Ex03",
    "section": "Interactive graphs by plotly",
    "text": "Interactive graphs by plotly\n\nInteractive scatter plot\n\n#|message: false\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -> https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -> https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n\n\nAdding visual effect\n\nplot_ly(data= exam_data,\n       x= ~MATHS,\n       y= ~ENGLISH,\n       color= ~RACE)\n\n\n\n\n\n\n\nCoordinate multiple views\n\nhighlight_key: create shared data for two plots\nsubplot: coordinate two plots together\n\n\nd <- highlight_key(exam_data)\n\np1 <- ggplot(data=d,aes(x=MATHS,y=ENGLISH))+\n  geom_point(size=2)+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\np2 <- ggplot(data=d,aes(x=MATHS,y=SCIENCE))+\n  geom_point(size=2)+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\nsubplot(ggplotly(p1),ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graphs-by-ggplotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graphs-by-ggplotly",
    "title": "Hands-on_Ex03",
    "section": "Interactive graphs by ggplotly",
    "text": "Interactive graphs by ggplotly\n\nplot <- ggplot(data=exam_data,aes(x=MATHS,y=ENGLISH))+\n  geom_point(size=2)+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\n\nggplotly(plot)\n\n\n\n\n\n\nData table\nclass=“compact” means to have compact layout for the table\n\nDT::datatable(exam_data,class=\"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#link-table-with-graph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#link-table-with-graph",
    "title": "Hands-on_Ex03",
    "section": "Link table with graph",
    "text": "Link table with graph\n\nhighlight_key: assign identifier to dataframe\nplotly_selected: track corresponding point when mouse click on table row\ncrosstalk: combine table and graph\nbscols: create layout with two elements\n\n\ndata <- highlight_key(exam_data)\n\np <- ggplot(data,aes(ENGLISH,MATHS))+\n  geom_point(siz=1)+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\nWarning in geom_point(siz = 1): Ignoring unknown parameters: `siz`\n\ngg <- highlight(ggplotly(p),\"plotly_selected\")\n\ncrosstalk::bscols(gg,DT::datatable(data),widths = 5)\n\nSetting the `off` event (i.e., 'plotly_deselect') to match the `on` event (i.e., 'plotly_selected'). You can change this default via the `highlight()` function."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data-1",
    "title": "Hands-on_Ex03",
    "section": "Import data",
    "text": "Import data\n\nmutate_each or mutate(across())：apply given function to selected columns\n%>% pass function/results to next step\nfuns all all_of: create a list of function\nfactor: turn column into categorical variable\n\n\ncol <- c(\"Country\",\"Continent\")\nglobal <- read_xls(\"data/GlobalPopulation.xls\",\n                   sheet=\"Data\") %>% \n  mutate(across(all_of(col), factor)) %>% \n  mutate(Year=as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#population-bubble-plot",
    "title": "Hands-on_Ex03",
    "section": "Population bubble plot",
    "text": "Population bubble plot\n\nstatic plot\n\nggplot(global,aes(x=Old,y=Young,size=Population,colour=Country))+\n  geom_point(alpha=0.7,show.legend = FALSE)+\n  scale_color_manual(values=country_colors)+\n  scale_size(range=c(2,10))+\n  labs(title='Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')\n\n\n\n\n\n\nAnimated plot with gganimate\nease_aes(): the moving way of plot element, default is linear\n\nggplot(global,aes(x=Old,y=Young,size=Population,colour=Country))+\n  geom_point(alpha=0.7,show.legend = FALSE)+\n  scale_color_manual(values=country_colors)+\n  scale_size(range=c(2,10))+\n  labs(title='Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')+\n  transition_time(Year)+\n  ease_aes(\"linear\")\n\n\n\n\n\n\nAnimated plot with ggplotly\n\nplot <- ggplot(global,aes(x=Old,y=Young,size=Population,colour=Country))+\n  geom_point(aes(size=Population, frame=Year),\n             alpha=0.7,show.legend = FALSE)+\n  scale_color_manual(values=country_colors)+\n  scale_size(range=c(2,10))+\n  labs( x = '% Aged', \n       y = '% Young')\n\nWarning in geom_point(aes(size = Population, frame = Year), alpha = 0.7, :\nIgnoring unknown aesthetics: frame\n\nggplotly(plot)\n\nWarning in p$x$data[firstFrame] <- p$x$frames[[1]]$data: number of items to\nreplace is not a multiple of replacement length\n\n\n\n\n\n\n\n\nUsing plot_ly()\n\nbp <- global %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate,ggstatsplot,readxl, performance, parameters, see)\n\n\nlibrary(readr)\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nset.seed(1234)\ngghistostats(data=exam_data,x=ENGLISH, type=\"bayes\",\n             test.values=70,xlab=\"English score\")\n\n\n\n\n\n\n\nCompare distribution/density of female and male performance in Math test\n\nggbetweenstats(\n  data=exam_data,\n  x=GENDER,\n  y=MATHS,\n  type='np',\n  message=FALSE)\n\n\n\n\n\n\n\n\nggbetweenstats(data=exam_data,\n               x=RACE,\n               y=ENGLISH,\n               type='p',\n               mean.ci=TRUE,\n               pairwise.comparisons = TRUE,\n               pairwise.display = 's',\n               p.adjust.method = 'fdr',\n               message=FALSE\n               )\n\n\n\n\n\n\n\nCan see Pearson correlation coefficient\n\nggscatterstats(data=exam_data,\n               x=MATHS,\n               y=ENGLISH,\n               marginal = FALSE\n               )\n\n\n\n\n\n\n\n\nexam=exam_data %>% \n  mutate(MATHS_bins=\n           cut(MATHS,\n               breaks=c(0,60,75,85,100)))\n\nggbarstats(data=exam,\n           x=MATHS_bins,\n           y=GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#toyota-corolla-case-with-linear-regression",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#toyota-corolla-case-with-linear-regression",
    "title": "Hands-on_Ex04",
    "section": "Toyota Corolla case with linear regression",
    "text": "Toyota Corolla case with linear regression\n\nImport the data\n\nresale_car <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncolnames(resale_car)\n\n [1] \"Id\"               \"Model\"            \"Price\"            \"Age_08_04\"       \n [5] \"Mfg_Month\"        \"Mfg_Year\"         \"KM\"               \"Quarterly_Tax\"   \n [9] \"Weight\"           \"Guarantee_Period\" \"HP_Bin\"           \"CC_bin\"          \n[13] \"Doors\"            \"Gears\"            \"Cylinders\"        \"Fuel_Type\"       \n[17] \"Color\"            \"Met_Color\"        \"Automatic\"        \"Mfr_Guarantee\"   \n[21] \"BOVAG_Guarantee\"  \"ABS\"              \"Airbag_1\"         \"Airbag_2\"        \n[25] \"Airco\"            \"Automatic_airco\"  \"Boardcomputer\"    \"CD_Player\"       \n[29] \"Central_Lock\"     \"Powered_Windows\"  \"Power_Steering\"   \"Radio\"           \n[33] \"Mistlamps\"        \"Sport_Model\"      \"Backseat_Divider\" \"Metallic_Rim\"    \n[37] \"Radio_cassette\"   \"Tow_Bar\"         \n\n\n\n\nBuild multiple linear regression\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = resale_car)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = resale_car)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\nCheck multicollinearity\nOne way to detect multicollinearity (whether independent variables are highly correlated) is to calculate the variance inflation factor (VIF) for each independent variable.\n\nc <- check_collinearity(model)\nplot(c)\n\n\n\n\n\n\nChecking normality assumption\nBuild model1(remove one highly correlated variable of mfg_year)\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = resale_car)\ncheck_n <- check_normality(model1)\nplot(check_n)\n\n\n\n\n\n\nCheck model for homogeneity of variances\nSignificance testing for linear regression models assumes that the model errors (or residuals) have constant variance.\n\ncheck_v <- check_heteroscedasticity(model1)\nplot(check_v)\n\n\n\n\n\n\nComplete check\nCan also check all the assumptions by one step. Influential observation is an observation in a dataset that, when removed, dramatically changes the coefficient estimates of a regression model\n\ncheck_model(model1)\n\n\n\n\n\n\nParameter plot\nSee the coefficient direction and strength in the plot.\n\nplot(parameters(model1))\n\n\n\n\n\n\nVisualising Regression Parameters\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualize-uncertainty-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualize-uncertainty-of-point-estimates",
    "title": "Hands-on_Ex04",
    "section": "Visualize uncertainty of point estimates",
    "text": "Visualize uncertainty of point estimates\n\npoint estimate such as mean, addressed with uncertainty like CI se: standard error measures the variability of the sample means, estimate the precision of the sample mean as an estimate of the population mean.\nsd/sqrt(n-1), n-1 can been thought as degree of freedom\n\n\nsum_num <- exam_data %>% \n  group_by(RACE) %>% \n  summarise(n=n(),\n            mean=round(mean(MATHS),2),\n            sd=round(sd(MATHS),2)) %>% \n  mutate(se=round(sd/sqrt(n-1),2))\n\nsum_num\n\n# A tibble: 4 × 5\n  RACE        n  mean    sd    se\n  <chr>   <int> <dbl> <dbl> <dbl>\n1 Chinese   193  76.5  15.7  1.13\n2 Indian     12  60.7  23.4  7.04\n3 Malay     108  57.4  21.1  2.04\n4 Others      9  69.7  10.7  3.79\n\n\n\nknitr::kable(head(sum_num),format='html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.51 \n    15.69 \n    1.13 \n  \n  \n    Indian \n    12 \n    60.67 \n    23.35 \n    7.04 \n  \n  \n    Malay \n    108 \n    57.44 \n    21.13 \n    2.04 \n  \n  \n    Others \n    9 \n    69.67 \n    10.72 \n    3.79 \n  \n\n\n\n\n\n\nStandard error visulization\n\nggplot(sum_num)+\n  geom_errorbar(\n    aes(x=RACE,\n        ymin=mean-se,\n        ymax=mean+se),\n    width=0.2,\n    color='black',\n    alpha=0.9,\n    size=1)+\n  geom_point(aes(x=RACE,\n                 y=mean),\n             stat='identity',\n             color='red',\n             size=2,\n             alpha=1)+\n  ggtitle(\"Standard error of mean \n          maths score by race\")\n\n\n\n\n\n\n95% Confidence interval\nuse qnorm(0.975)=1.96 to calculate lower and upper bound\n\nsum_num$RACE <- factor(sum_num$RACE,levels = sum_num$RACE[order(-sum_num$mean)])\nggplot(sum_num)+\n  geom_errorbar(\n    aes(x=RACE,\n        ymin=mean-1.96*se,\n        ymax=mean+1.96*se),\n    width=0.2,\n    color='black',\n    alpha=0.95,\n    size=1)+\n  geom_point(aes(x=RACE,\n                 y=mean),\n             stat='identity',\n             color='red',\n             size=2,\n             alpha=1)+\n  ggtitle(\"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\nUncertainty of point estimates with interactive error bars\n\ndata <- highlight_key(sum_num)\np <- ggplot(data)+\n  geom_errorbar(\n    aes(x=RACE,\n        ymin=mean-2.32*se,\n        ymax=mean+2.32*se),\n    width=0.2,\n    color='black',\n    alpha=0.99,\n    size=1)+\n  geom_point(aes(x=RACE,\n                 y=mean),\n             stat='identity',\n             color='red',\n             size=2,\n             alpha=1)+\n  ggtitle(\"99% confidence interval of mean maths score by race\")\n\ngg <- highlight(ggplotly(p),\"plotly_selected\")\n\ncrosstalk::bscols(gg,DT::datatable(data),widths = 5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfidence interval plot with ggdist\n\nexam_data %>% \n  ggplot(aes(x=RACE,y=MATHS,))+\n  stat_pointinterval()+\n  labs(\n    title=\"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Confidence-interval plot\")\n\n\n\n\n\n\nUse stat_gradientinterval\n\nexam_data %>% \n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(\n    fill='skyblue',\n    show.legend=TRUE\n  )+\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\"\n  )\n\n\n\n\n\n\nHypothetical Outcome Plots\n\nlibrary(ungeviz)\n\nSample 25 data each time, and plot horizontal line grouping by race.\n\nggplot(data=exam_data,\n       aes(x=factor(RACE),y=MATHS))+\n  geom_point(position=position_jitter(),size=0.5)+\n  geom_hpline(data=sampler(25,group = RACE),color = \"#D55E00\",size=0.1)+\n  theme_bw()\n\n\n\n\n\nTransition_states means create sequence of frames to have animation of changes\nDraw indicating generating a column of sampling, starting with first frame to the twentieth frame\n\n\nggplot(data=exam_data,\n       aes(x=factor(RACE),y=MATHS))+\n  geom_point(position=position_jitter(),size=0.5)+\n  geom_hpline(data=sampler(25,group = RACE),color = \"#D55E00\",size=0.1)+\n  theme_bw()+\n  transition_states(.draw,1,20)\n\n\n\n\n\nexam_data\n\n# A tibble: 322 × 7\n   ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n   <chr>      <chr> <chr>  <chr>     <dbl> <dbl>   <dbl>\n 1 Student321 3I    Male   Malay        21     9      15\n 2 Student305 3I    Female Malay        24    22      16\n 3 Student289 3H    Male   Chinese      26    16      16\n 4 Student227 3F    Male   Chinese      27    77      31\n 5 Student318 3I    Male   Malay        27    11      25\n 6 Student306 3I    Female Malay        31    16      16\n 7 Student313 3I    Male   Chinese      31    21      25\n 8 Student316 3I    Male   Malay        31    18      27\n 9 Student312 3I    Male   Malay        33    19      15\n10 Student297 3H    Male   Indian       34    49      37\n# ℹ 312 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plots-for-fair-comparisons",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plots-for-fair-comparisons",
    "title": "Hands-on_Ex04",
    "section": "Funnel Plots for Fair Comparisons",
    "text": "Funnel Plots for Fair Comparisons\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\n\ncovid19 <- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %>% \n  mutate_if(is.character,as.factor)\ncovid19\n\n# A tibble: 267 × 7\n   `Sub-district ID` City       District `Sub-district` Positive Recovered Death\n               <dbl> <fct>      <fct>    <fct>             <dbl>     <dbl> <dbl>\n 1        3172051003 JAKARTA U… PADEMAN… ANCOL              1776      1691    26\n 2        3173041007 JAKARTA B… TAMBORA  ANGKE              1783      1720    29\n 3        3175041005 JAKARTA T… KRAMAT … BALE KAMBANG       2049      1964    31\n 4        3175031003 JAKARTA T… JATINEG… BALI MESTER         827       797    13\n 5        3175101006 JAKARTA T… CIPAYUNG BAMBU APUS         2866      2792    27\n 6        3174031002 JAKARTA S… MAMPANG… BANGKA             1828      1757    26\n 7        3175051002 JAKARTA T… PASAR R… BARU               2541      2433    37\n 8        3175041004 JAKARTA T… KRAMAT … BATU AMPAR         3608      3445    68\n 9        3171071002 JAKARTA P… TANAH A… BENDUNGAN HIL…     2012      1937    38\n10        3175031002 JAKARTA T… JATINEG… BIDARA CINA        2900      2773    52\n# ℹ 257 more rows\n\n\nPR: proportional ratio, indicates that the data represents the ratio of the numerator (deaths) to the denominator (positive cases) for each sub-district\n\nfunnel_plot(numerator = covid19$Death,denominator = covid19$Positive,\n            group=covid19$`Sub-district`,\n            data_type = \"PR\",\n            x_range = c(0,6500),\n            y_range=c(0,0.05),\n            label=NA,\n            title = \"COVID-19 Fatality Rate by Positive Cases\",\n            x_label=\"Cumulative COVID-19 Positive Cases\",\n            y_label=\"Cumulative Fatality Rate\"\n            )\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\nCustomnized funnel plot\n\nStandard error formula for probability: √ [p (1-p) / n)\nUse reciprocal and square so bigger standard error can have bigger weight in the weighted mean\nseq function generates a sequence of number from 1 to maximum value of positive, incremental by 1, so that can count confidence interval of different sample size\n\n\n\nShow code\ndf <- covid19 %>% \n  mutate(rate=Death/Positive) %>% \n  mutate(rate.se=sqrt(rate*(1-rate)/Positive)) %>% \n  filter(rate>0)\n\nfit.mean <- weighted.mean(df$rate,1/(df$rate.se^2))\n\nnumber <- seq(1,max(df$Positive),1)\nupper.95 <- fit.mean+1.96*sqrt(fit.mean*(1-fit.mean)/number)\nlower.95 <- fit.mean-1.96*sqrt(fit.mean*(1-fit.mean)/number)\nupper.99 <- fit.mean+3.29*sqrt(fit.mean*(1-fit.mean)/number)\nlower.99 <- fit.mean-3.29*sqrt(fit.mean*(1-fit.mean)/number)\ntable <- data.frame(upper.95,lower.95,upper.99,lower.99,number,fit.mean)\n\np <-ggplot(df,aes(x=Positive,y=rate))+\n  geom_point(aes(label=(label=`Sub-district`),alpha=0.4))+\n  geom_line(data=table,aes(x=number,y=upper.95),size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\")+\n  geom_line(data=table,aes(x=number,y=lower.95),size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\")+\n  geom_line(data=table,aes(x=number,y=upper.99),size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\")+\n   geom_line(data=table,aes(x=number,y=lower.99),size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\")+\n  geom_hline(data=table,aes(yintercept=fit.mean),size = 0.4, \n             colour = \"grey40\")+\n             coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\n        \np\n\n\n\n\n\n\n\nInteractive plot\n\ninterative_p <-ggplotly(p,tooltip=c(\"label\",\"x\",\"y\"))\ninterative_p"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "Show the code\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges",
    "title": "Hands-on_Ex05",
    "section": "2.4.1 Working with facet_edges()",
    "text": "2.4.1 Working with facet_edges()\n\n\nShow the code\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Frequency), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)+\n  theme(legend.position = \"bottom\")\n\ng + facet_edges(~Weekday)\n\n\n\n\n\nA framed facet graph\n\n\nShow the code\nset_graph_style()\n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Frequency), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)+\n  th_foreground(foreground = \"grey80\",\n                border = TRUE)+\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "title": "Hands-on_Ex05",
    "section": "2.4.2 Working with facet_nodes()",
    "text": "2.4.2 Working with facet_nodes()\n\n\nShow the code\nset_graph_style()\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Frequency), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",\n                border = TRUE)\n\n\n\n\n\nShow the code\n  theme(legend.position = \"bottom\")\n\n\nList of 1\n $ legend.position: chr \"bottom\"\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi FALSE\n - attr(*, \"validate\")= logi TRUE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "title": "Hands-on_Ex05",
    "section": "2.5.1 Computing centrality indices",
    "text": "2.5.1 Computing centrality indices\nCreate new column of centrality_betweenness\n\n\nShow the code\ng <- GAStech_graph %>% \n  mutate(between_centrality = centrality_betweenness()) %>% \n  ggraph(layout = \"fr\") +\n  geom_edge_link(aes(width=Frequency), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n                      size = between_centrality) \n                  )\n\ng\n\n\n\n\n\nAutomatically compute in ggraph v2.0\n\n\nShow the code\ng <- GAStech_graph %>% \n  ggraph(layout = \"fr\") +\n  geom_edge_link(aes(width=Frequency), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\n\ng"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "title": "Hands-on_Ex05",
    "section": "2.5.2 Visualising Community",
    "text": "2.5.2 Visualising Community\n\n\nShow the code\ng <- GAStech_graph %>% \n  mutate(community = as.factor(group_edge_betweenness(\n    weights = Frequency,directed = TRUE))) %>% \n  ggraph(layout = \"fr\") +\n  geom_edge_link(aes(width=Frequency), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community) \n                  )\n\ng"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "title": "Hands-on_Ex05",
    "section": "2.6.1 Data preparation",
    "text": "2.6.1 Data preparation\nvisNetwork() function uses a nodes list and edges list to create an interactive graph.\nThe nodes list must include an “id” column, and the edge list must have “from” and “to” columns. The function also plots the labels for the nodes, using the names of the actors from the “label” column in the node list.\n\n\nShow the code\nGAStech_edges_aggregated <- GAStech_edges %>%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %>%\n  rename(from = id) %>%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %>%\n  rename(to = id) %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(from, to) %>%\n    summarise(weight = n(), .groups = \"drop\") %>%\n  filter(from!=to) %>%\n  filter(weight > 1) \n\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 839\nColumns: 3\n$ from   <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ to     <dbl> 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,…\n$ weight <int> 21, 21, 21, 21, 21, 21, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactive-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactive-network-graph",
    "title": "Hands-on_Ex05",
    "section": "2.6.2 Interactive network graph",
    "text": "2.6.2 Interactive network graph\n\n\nShow the code\nvisNetwork(GAStech_nodes, GAStech_edges_aggregated)\n\n\n\n\n\n\nChange layout\n\n\nShow the code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#grouping-node",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#grouping-node",
    "title": "Hands-on_Ex05",
    "section": "2.6.3 Grouping node",
    "text": "2.6.3 Grouping node\nRename Department field to group\n\n\nShow the code\nGAStech_nodes <- GAStech_nodes %>% \n  rename(group = Department)\n\n\nAssigning unique colour to each category in the group field\n\n\nShow the code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>% \n  visLegend() %>% \n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-edges",
    "title": "Hands-on_Ex05",
    "section": "2.6.4 Changing edges",
    "text": "2.6.4 Changing edges\n\nThe argument arrows is used to define where to place the arrow.\nThe smooth argument is used to plot the edges using a smooth curve.\n\n\n\nShow the code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>% \n  visEdges(arrows = \"to\",\n           smooth = list(enabled = TRUE,\n                         type = \"curvedCW\")) %>% \n  visLegend() %>% \n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactive-option-bar",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactive-option-bar",
    "title": "Hands-on_Ex05",
    "section": "2.6.5 Interactive option bar",
    "text": "2.6.5 Interactive option bar\nisOptions() is used to incorporate interactivity features in the data visualisation. - The argument highlightNearest highlights nearest when clicking a node. - The argument nodesIdSelection adds an id node selection creating an HTML select element.\n\n\nShow the code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %>%\n  visIgraphLayout(layout = \"layout_with_fr\") %>% \n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %>% \n  visLegend() %>% \n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In Class Exercise 1",
    "section": "",
    "text": "pacman::p_load(tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#import-data",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#import-data",
    "title": "In Class Exercise 1",
    "section": "Import data",
    "text": "Import data\n\nexam_data <- read.csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#horizontal-bar-chart",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#horizontal-bar-chart",
    "title": "In Class Exercise 1",
    "section": "Horizontal bar chart",
    "text": "Horizontal bar chart\n\nggplot(data=exam_data,\n       aes(x=RACE))+\n  geom_bar()+\n  coord_flip()+\n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill='lightblue',color = 'lightblue'),\n    panel.grid.major = element_line(colour = 'white',size = 0.5,linewidth =  'solid'),\n    panel.grid.minor = element_line(colour = 'white',size=0.25,linewidth = 'solid')\n  )\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\n\n\n\n\nBar chart with label\n\nBar chart with label 1. function(x) counts the occurrence frequency of different x and minor constant length(x), allowing x axis to sort by the count value by descending order.\nstate=“count” indicate will use count method and applies to ..count.. and the plot\naes() to map with variables in the plot. paste0 is to concatenate strings\n“after_stat(count)” or “..count..”(new version) means count of observations in each category\nvjust is the lable position, -1 means a little above from the bar.\nuse theme(axis.title.y to adjust y axis title angle)\n\n\nggplot(data=exam_data,aes(x=reorder(RACE,RACE,function(x)-length(x))))+\n  geom_bar()+\n  ylim(0,220)+\n  xlab(\"RACE\")+\n  ylab(\"No. of \\nPupils\")+\n  geom_text(stat =\"count\",aes(label=paste0(after_stat(count),\",\",                                       round(after_stat(count)/sum(after_stat(count))*100,1),\"%\")),\n            vjust=-1)+\n  theme(axis.title.y=element_text(angle=0))\n\n\n\n\n\n\nUse fct_infreq() of forcats package\n\nUse Command + Shift + M to type %>%\nfct_infreq can count the occurrence frequency of each category, and reorder by descending order\nMutate create a new column, and use %>% to modify and apply new changes to the data frame.\n\n\nexam_data %>% \n  mutate(RACE=fct_infreq(RACE)) %>% \n  ggplot(aes(RACE))+\n  geom_bar()+\n  ylim(0,220)+\n  xlab(\"RACE\")+\n  ylab(\"No. of \\nPupils\")+\n  geom_text(stat =\"count\",aes(label=paste0(after_stat(count),\",\",                                       round(after_stat(count)/sum(after_stat(count))*100,1),\"%\")),\n            vjust=-1)+\n  theme(axis.title.y=element_text(angle=0))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#histogram",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#histogram",
    "title": "In Class Exercise 1",
    "section": "Histogram",
    "text": "Histogram\n\nAdd mean and median line\n\nUse vline to draw vertical line.\nxintercept as x-axis variable of MATHS\nna.rm=T(True), means apply method of removing missing values before caculating mean.\n\n\nggplot(data=exam_data,aes(MATHS))+\n  geom_histogram(bins=20,boundary=100,fill='lightblue',color='black')+\n  geom_vline(aes(xintercept=mean(MATHS,na.rm=T)),color='red',\n             linetype='dashed',size=1)+\n  geom_vline(aes(xintercept=median(MATHS,na.rm=TRUE)),color='grey',linetype='dashed',\n             size=1)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\nColor comparison and facet grid\n\nguides(fill=FALSE) means to turn off legend\ncreate new histogram, one use sub_data without gender column, one use data and with black line and fill different color by gender.\n\n\ndata <- exam_data\nsub_data <- data[,-3]\n\nggplot(data,aes(x=ENGLISH,fill=GENDER))+\n  geom_histogram(data=sub_data,fill='grey',alpha=0.5)+\n  geom_histogram(colour='black')+\n  facet_wrap(~GENDER)+\n  guides(fill=FALSE)+\n  theme_bw()\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#scatter-plot-with-quadrant",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#scatter-plot-with-quadrant",
    "title": "In Class Exercise 1",
    "section": "Scatter plot with quadrant",
    "text": "Scatter plot with quadrant\n\nggplot(data=exam_data,aes(x=MATHS,y=ENGLISH))+\n  geom_point()+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))+\n  geom_hline(aes(yintercept=50),color='grey',size=1,linetype='dashed')+\n  geom_vline(aes(xintercept=50),color='grey',size=1,linetype='dashed')"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class_Ex03",
    "section": "",
    "text": "Tableau Public: https://public.tableau.com/app/profile/yun.hsuan.yen"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class_Ex04",
    "section": "",
    "text": "rstatix: transform the statistic test result into data table instead of just text\n\n\nShow code\npacman::p_load(rstatix,gt,patchwork,tidyverse)\n\n\n\nlibrary(magrittr) # needs to be run every time you start R and want to use %>%\nlibrary(vctrs)\n\n\nlibrary(readr)\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#plot-qq-plot",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#plot-qq-plot",
    "title": "In-class_Ex04",
    "section": "Plot QQ plot",
    "text": "Plot QQ plot\nQQ plot examine the sample data, so write sample=ENGLISH in the ggplot aes. Create stat_qq with normality distribution, and one line from the sample.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH))+\n  stat_qq()+\n  stat_qq_line()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class_Ex05",
    "section": "",
    "text": "Show the code\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts,jsonlite)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#extract-data-frame-from-mc1-list-as-tibble-table",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#extract-data-frame-from-mc1-list-as-tibble-table",
    "title": "In-class_Ex05",
    "section": "Extract data frame from MC1 list as tibble table",
    "text": "Extract data frame from MC1 list as tibble table\nUse select to pick columns and reorganize the sequence of data frame\n\n\nShow the code\nMC1_noeds <- as_tibble(MC1$nodes) %>% \n  select(id,type,country)\n\n\n\n\nShow the code\nMC1_edges <- as_tibble(MC1$links) %>% \n  select(source,target,type,weight,key)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to Visual Analytics and Applications homepage. In this website, you will find my coursework and portfolio prepared for this course.\nYou can find my contact information in ABOUT ME section."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "The local council of a city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate renewal grant.\nThis take-home exercise are required to reveal the demographic and financial characteristics of the city by using statistical graphics methods."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-package-and-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#import-package-and-data",
    "title": "Take Home Exercise 1",
    "section": "Import package and data",
    "text": "Import package and data\n\n\nShow the code\npacman::p_load(patchwork, tidyverse, ggstatsplot, \n               ggdist, gganimate, png, gifski,plyr, nortest,dplyr,tidyr,lubridate,skimr,ggcorrplot,ggpubr,plotly,\n               ggiraph, DT,ggridges,viridis,transformr )\n\n\n\n\nShow the code\nparticipant <- read_csv(\"data/Participants.csv\")\nfinancial <- read_csv(\"data/FinancialJournal.csv\")\n\n\nTwo data sets are provided. They are:"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#participants",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#participants",
    "title": "Take Home Exercise 1",
    "section": "Participants",
    "text": "Participants\nContains information about the residents of City of Engagement that have agreed to participate in this study.\n\nChange data format\nChange dbl format (household size, age, participant ID) to int (integer) since these values should not be float.\n\n\nShow the code\nparticipant <- participant %>% \nmutate_at(vars(householdSize,age,participantId), list(~as.integer(.))) \n\n\nReorder education level from lowest to highest degree.\n\n\nShow the code\nparticipant <- participant %>%\n  mutate(educationLevel=factor(educationLevel,levels = c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\")))\ndata.frame(levels(participant$educationLevel))\n\n\n  levels.participant.educationLevel.\n1                                Low\n2                HighSchoolOrCollege\n3                          Bachelors\n4                           Graduate\n\n\nEach column format has been adjusted as below table shown.\n\n\nShow the code\nhead(participant)\n\n\n# A tibble: 6 × 7\n  participantId householdSize haveKids   age educationLevel      interestGroup\n          <int>         <int> <lgl>    <int> <fct>               <chr>        \n1             0             3 TRUE        36 HighSchoolOrCollege H            \n2             1             3 TRUE        25 HighSchoolOrCollege B            \n3             2             3 TRUE        35 HighSchoolOrCollege A            \n4             3             3 TRUE        21 HighSchoolOrCollege I            \n5             4             3 TRUE        43 Bachelors           H            \n6             5             3 TRUE        32 HighSchoolOrCollege D            \n# ℹ 1 more variable: joviality <dbl>"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#financial-journal",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#financial-journal",
    "title": "Take Home Exercise 1",
    "section": "Financial Journal",
    "text": "Financial Journal\nContains information about financial transactions.\n\nCreate Year-Month column\nUse lubridate package (ymd_hms) to transform timestamp column into datetime format column “time”. Create new columns “Year_Month” and “Year”, since time information is no need for following visual analysis.\n\n\nShow code\nfinancial$time <- as.Date(ymd_hms(financial$timestamp))\nfinancial <- financial %>% \n  mutate(Year_Month = format(financial$time, \"%Y-%m\"),\n         Year_Month = factor((Year_Month),levels = unique(Year_Month)),\n         Year = format(financial$time, \"%Y\"),\n         participantId = as.integer(participantId))\nhead(financial)\n\n\n# A tibble: 6 × 7\n  participantId timestamp           category  amount time       Year_Month Year \n          <int> <dttm>              <chr>      <dbl> <date>     <fct>      <chr>\n1             0 2022-03-01 00:00:00 Wage      2473.  2022-03-01 2022-03    2022 \n2             0 2022-03-01 00:00:00 Shelter   -555.  2022-03-01 2022-03    2022 \n3             0 2022-03-01 00:00:00 Education  -38.0 2022-03-01 2022-03    2022 \n4             1 2022-03-01 00:00:00 Wage      2047.  2022-03-01 2022-03    2022 \n5             1 2022-03-01 00:00:00 Shelter   -555.  2022-03-01 2022-03    2022 \n6             1 2022-03-01 00:00:00 Education  -38.0 2022-03-01 2022-03    2022 \n\n\n\n\nGroup transaction by category\nThere are some duplicate records with same participant ID, category and timestamp. Use distinct function to drop duplicate rows. The original amount column contains positive(meaning income) and negative (expense) values. Transform amount to absolute value to avoid confusion.\n\n\nShow the code\ndetach(package:plyr)\nlibrary(dplyr)\nfinancial_new <- \n  financial %>% \n  distinct(participantId, category, timestamp,.keep_all = TRUE) %>%\n  group_by(participantId, category, Year,Year_Month) %>%\n  summarise(amount = round(sum(abs(amount)),1), .groups = 'drop') \n\nhead(financial_new)\n\n\n# A tibble: 6 × 5\n  participantId category  Year  Year_Month amount\n          <int> <chr>     <chr> <fct>       <dbl>\n1             0 Education 2022  2022-03        38\n2             0 Education 2022  2022-04        38\n3             0 Education 2022  2022-05        38\n4             0 Education 2022  2022-06        38\n5             0 Education 2022  2022-07        38\n6             0 Education 2022  2022-08        38\n\n\nTo compare amount of different categories, need to split out the unique values in the “category” column and their corresponding amounts into new columns by pivot_wider function. Fill null values with 0.\n\n\nShow code\nfinancial_orginize <- financial_new %>% \n  pivot_wider(names_from = category, values_from = amount, values_fill = 0) %>% \n  mutate(Total_Expense=rowSums(select(.,Education,Food,Recreation,Shelter)))\n\nhead(financial_orginize)\n\n\n# A tibble: 6 × 10\n  participantId Year  Year_Month Education  Food Recreation Shelter   Wage\n          <int> <chr> <fct>          <dbl> <dbl>      <dbl>   <dbl>  <dbl>\n1             0 2022  2022-03           38  268.       349.     555 11932.\n2             0 2022  2022-04           38  266.       219.     555  8637.\n3             0 2022  2022-05           38  265.       383      555  9048.\n4             0 2022  2022-06           38  257        466.     555  9048.\n5             0 2022  2022-07           38  270.      1070.     555  8637.\n6             0 2022  2022-08           38  262.       314.     555  9459.\n# ℹ 2 more variables: RentAdjustment <dbl>, Total_Expense <dbl>"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#merge-two-datasets",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#merge-two-datasets",
    "title": "Take Home Exercise 1",
    "section": "Merge two datasets",
    "text": "Merge two datasets\nSome participants only have 1-month records, so remain participants’ records with 12 months, and calculate their monthly average wage and spending in the “financial_average” data frame.\n\n\nShow code\nfinancial_average <- financial_orginize %>% \n  group_by(participantId) %>%\n  summarise(across(Education:Total_Expense,sum), \n            Month_count = n_distinct(Year_Month), \n            .groups = 'drop') %>%\n  filter(Month_count == 12) %>% \n  mutate(across(Education:Total_Expense, ~round(. / Month_count, 1)))\n\n\nJoin with “participant” by the same participant ID.\n\n\nShow the code\ndf_average <-  merge(x=financial_average,y=participant,by=\"participantId\")\n\nDT::datatable(df_average)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#correlation-with-joviality",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#correlation-with-joviality",
    "title": "Take Home Exercise 1",
    "section": "Correlation with joviality",
    "text": "Correlation with joviality\n\nWhat is key factor to joviality?\nTo better understand the correlation between joviality, annual income and spending, comparing the Pearson correlation values. Major findings as follow:\n\nHigher income does not necessarily lead to higher joviality\nWith closer examination of the correlation scatter plots, can find that there are participants with extremely high wage. While the majority of participants with wages below the 95th percentile exhibit a wide range of joviality values, those in the top 5th percentile of wage earners tend to have joviality values below 0.5.\nJoviality is most correlated with recreation spending.\nFor participants with spending above the 22th percentile, can observe a positive correlation between spending on recreation and joviality. This suggests that for those who spend more on recreation activities, there is a tendency to experience higher levels of joviality.\n\n\nCorrelationWage v.s JovialityRecreation expense v.s Joviality\n\n\n\n\nShow the code\nggstatsplot::ggcorrmat(\n  data = df_average,\n  cor.vars = c(\"Wage\",\"joviality\",\"Recreation\",\"Food\",\"Shelter\"))\n\n\n\n\n\n\n\n\n\nShow the code\nggscatterstats(\n  data = df_average,\n  x = Wage,\n  y = joviality,\n  title = 'Wage vs Jovality',\n  ggplot.component = list(\n    scale_x_continuous(\n      breaks = seq(0, 15000, 2000),\n      limits = c(0, 15000)\n    )\n  )\n) +\n  geom_vline(aes(xintercept = quantile(Wage,probs=0.95)), color = \"darkgreen\",linetype=\"dashed\",linewidth=1)+\n  geom_hline(aes(yintercept = 0.5), color = \"darkorange\",linetype=\"dashed\",linewidth=1)+\n  annotate(\n    \"text\",\n    x = quantile(df_average$Wage, probs = 0.95),\n    y = -0.05,\n    label = \"95th Percentile\",\n    color = \"darkgreen\"\n  )\n\n\n\n\n\n\n\n\n\nShow the code\nggscatterstats(\n  data = df_average,\n  x = Recreation,\n  y = joviality,\n  title = 'Recreation vs Jovality',\n  ggplot.component = list(\n    scale_x_continuous(\n      breaks = seq(0, 900, 100),\n      limits = c(0, 900)\n    )\n  )\n) +\n  geom_vline(aes(xintercept = quantile(Recreation,probs=0.22)), color = \"darkgreen\",linetype=\"dashed\",linewidth=1)+\n  #geom_hline(aes(yintercept = 0.5), color = \"darkorange\",linetype=\"dashed\",linewidth=1)+\n  annotate(\n    \"text\",\n    x = quantile(df_average$Recreation, probs = 0.22),\n    y = -0.05,\n    label = \"22th Percentile\",\n    color = \"darkgreen\"\n  )\n\n\n\n\n\n\n\n\n\n\nBuilding regression with uncertainty\n\nRecreation expense v.s JovialityWage v.s Joviality\n\n\n\n\nShow the code\nbs <- ungeviz::bootstrapper(20)\n\n\nggplot(df_average, aes(Recreation, joviality)) +\n  geom_smooth(method = \"lm\", color = NA) +\n  geom_point(alpha = 0.3) +\n  geom_point(data = bs, aes(group = .row)) +\n  geom_smooth(data = bs, method = \"lm\", fullrange = TRUE, se = FALSE) +\n  theme_bw() +\n  transition_states(.draw, 1, 1) + \n  enter_fade() + \n  exit_fade()\n\n\n\n\n\n\n\n\n\nShow the code\nbs <- ungeviz::bootstrapper(20)\n\n\nggplot(df_average, aes(Wage, joviality)) +\n  geom_smooth(method = \"lm\", color = NA) +\n  geom_point(alpha = 0.3) +\n  geom_point(data = bs, aes(group = .row)) +\n  geom_smooth(data = bs, method = \"lm\", fullrange = TRUE, se = FALSE) +\n  theme_bw() +\n  transition_states(.draw, 1, 1) + \n  enter_fade() + \n  exit_fade()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#financial-pattern",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#financial-pattern",
    "title": "Take Home Exercise 1",
    "section": "Financial pattern",
    "text": "Financial pattern\n\nWhat is overall transaction distribution and difference\nSince each category has a different value range, applying scale of log10 to make the ranges comparable in the same graph. Education expense has the lowest average value, while recreation expense exhibits a larger variance, and food expense is more centered.\n\n\nShow the code\n# Reshape the data from wide to long format using pivot_longer\np <- df_average %>%\n  group_by(participantId) %>%\n  summarise(across(Education:Wage),\n            .groups = 'drop') %>% \n  pivot_longer(cols = -participantId, names_to = \"Category\", values_to = \"Value\")\n\nplot <- ggplot(p,aes(x = Value, fill = Category)) +\n  geom_density_interactive(aes(tooltip=Category),alpha=0.8) +\n# Generate a discrete version from the \"viridis\" color palette to make the colors more beautiful\n  scale_fill_viridis_d(option = \"D\")+\n  scale_y_continuous(NULL,           \n                     breaks = NULL)+\n  ggtitle(\"Financial transaction distribution\")+\n  scale_x_log10()\n\n# Create girafe interactive label to easily identify each density category\ngirafe(\n  ggobj = plot,\n  width_svg = 6,\n  height_svg = 6 * 0.618\n)                        \n\n\n\n\n\n\nUpon closer examination of the expenses in the following categories, food and recreation have similar mean values, while recreation exhibits a larger spread of spending amounts. And shelter expense demonstrates the highest number of outliers.\n\n\nShow the code\n# Use same color from previous plot for the same category\ncolor_palette <- viridis_pal(option = \"D\")(5)\nselected_colors <- color_palette[2:4] \n\np1 <- df_average %>%\n  group_by(participantId) %>%\n  summarise(across(Food:Shelter),\n            .groups = 'drop') %>% \n  pivot_longer(cols = -participantId, names_to = \"Category\", \n               values_to = \"Value\") %>%\n  ggplot(aes(y = Value, x = Category, fill = Category)) +\n  geom_boxplot() +\n  scale_fill_manual(values = selected_colors)+\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               color = \"black\",  \n               size = 4) +\n  labs(x = \"Spending category\", y = \"Amount\") +\n  theme(legend.position = \"none\")\n\nggplotly(p1)\n\n\n\n\n\n\n\n\nStandard error bars of mean\nTo assess the standard error of spending and wage amounts, use z-score normalization to standardize the range. Wage exhibits the largest range of error bars, suggesting a significant level of variability and uncertainty surrounding the wage data from these participants.\n\nDataPlot\n\n\n\n\nShow the code\np <- df_average %>%\n  group_by(participantId) %>%\n  summarise(across(Education:Wage),\n            .groups = 'drop')\n# Select all columns except for participant id, and apply mean/sd calculation to all selected columns\nmeans <- apply(p[, -1], 2, mean)\nstd_errors <- apply(p[, -1], 2, function(x) sd(x) / sqrt(length(x)-1))\n\n# Create a new dataframe with means and standard errors by category\nplot_df <- data.frame(\n  variable = names(means),\n  mean = means,\n  se = std_errors\n)\n\nplot_df <- rownames_to_column(plot_df, var = \"row_index\") %>%\n  select(-row_index)\n\nknitr::kable(head(plot_df), format = 'html')\n\n\n\n\n \n  \n    variable \n    mean \n    se \n  \n \n\n  \n    Education \n    12.97739 \n    0.8707907 \n  \n  \n    Food \n    349.97352 \n    2.6425127 \n  \n  \n    Recreation \n    392.36182 \n    6.2265815 \n  \n  \n    Shelter \n    639.79523 \n    7.2402118 \n  \n  \n    Wage \n    4286.32250 \n    77.6725270 \n  \n\n\n\n\n\n\n\n\n\nShow the code\nplot_df$normalized_mean <- scale(plot_df$mean)\n\nggplot(plot_df) +\n  geom_errorbar_interactive(aes(x=variable,ymin = normalized_mean - se, ymax = normalized_mean + se), width = 0.2) +\n  geom_point(aes\n           (x=variable,y=normalized_mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1)+\n  labs(title = \"Normalized Mean and Standard Error\", x = \"Variable\", y = \"Mean\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#with-without-kids",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#with-without-kids",
    "title": "Take Home Exercise 1",
    "section": "With/ without kids",
    "text": "With/ without kids\n30% of participants have kids, indicating a difference in family composition. Those without children do not have education expense. Besides, participants with kids tend to have higher average expenses in the shelter category.\n\nDataPlot\n\n\n\n\nShow the code\n# Calculate average amount based on number of participants having/not having kids\nsummary_kid <- df_average %>%\n  group_by(haveKids) %>%\n  summarise(across(Education:RentAdjustment,sum),\n            persons = n_distinct(participantId),\n            .groups = 'drop') %>%\n  mutate(across(Education:RentAdjustment, ~round(. / persons, 1)))\n\n# Reshape the data from wide to long format \nmelted_kid <- gather(summary_kid, key = \"Category\", value = \"Value\", -haveKids)\nmelted_kid <- melted_kid %>% filter(Category != \"persons\",Category  \n                                    !=\"RentAdjustment\",Category != \"Wage\")\n\nhead(melted_kid)\n\n\n# A tibble: 6 × 3\n  haveKids Category   Value\n  <lgl>    <chr>      <dbl>\n1 FALSE    Education    0  \n2 TRUE     Education   46.2\n3 FALSE    Food       350. \n4 TRUE     Food       350. \n5 FALSE    Recreation 379. \n6 TRUE     Recreation 428. \n\n\n\n\n\n\nShow the code\nprop1 <- ggplot(data = df_average, aes(x = haveKids, fill = haveKids)) +\n  geom_bar(color = \"black\", size = 0.5) +\n  geom_text(stat = \"count\",\n            aes(label = paste0(\"(\", count, \") \", round(..count../sum(..count..) * 100, 1), \"%\")),vjust = -1, color = \"black\") +\n  labs(title = \"Number of Participants with/without Kids\",x=\"\",\n       fill = \"Have Kids\") +\n  ylab(\"Count\") +\n  coord_cartesian(ylim = c(0, 850)) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.4, size = 15, face = \"bold\"),\n    plot.margin = margin(20, 20, 20, 20),\n    legend.position = \"right\",\n    legend.text = element_text(size = 12),\n    legend.title = element_text(size = 14, face = \"bold\"),\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n\n# Code to generate `prop2`\nprop2 <- ggplot(melted_kid, aes(Category, Value, fill = haveKids)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\", size = 0.5) +\n  labs(title = \"Average Spending Pattern\", x = NULL) +\n  ylab(\"Amount\") +\n  coord_cartesian(ylim = c(0, 850))+\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.4, size = 15, face = \"bold\"),\n    plot.margin = margin(20, 20, 20, 20),\n    legend.position = \"None\",\n    legend.text = element_text(size = 12),\n    legend.title = element_text(size = 14, face = \"bold\"),\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n\nprop1 / prop2\n\n\n\n\n\n\n\n\n\nWage distribution\nIndividuals with children tend to have higher wages, while those without children typically have wages centered around lower values.\n\n\nShow the code\n#Calculate mean wage of groups have/not having kids\nlibrary(plyr)\nmukid <- ddply(df_average, \"haveKids\", summarise, kid.mean=mean(Wage))\n\np<-ggplot(df_average, aes(x=Wage,fill=haveKids))+\n  geom_density(alpha=0.5)+\n  scale_y_continuous(NULL, breaks = NULL) +\n  labs(title=\"Wage with/without kids\",x=\"Wage amount\")+ \n  theme(plot.margin = margin(50, 50, 20, 20),\n        legend.position = \"None\",\n         plot.title = element_text(hjust = 0.4, size = 15, face = \"bold\")\n       )+\n  facet_grid(haveKids ~ .)\n\n# Add mean lines\np+geom_vline(data=mukid, aes(xintercept=kid.mean, color=\"red\"),\n             linetype=\"dashed\")+\n  geom_text(data = mukid, aes(x = kid.mean, label = \"mean\"), \n            color = \"black\", y=0,vjust = -1, hjust = -0.5)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#different-education-level",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#different-education-level",
    "title": "Take Home Exercise 1",
    "section": "Different education level",
    "text": "Different education level\nMajority of participants have completed high school or college as their highest level of education\n\n\nShow the code\n# Count percentage of different education level in all participants\neducation_level <- prop.table(table(df_average$educationLevel)) * 100\n\nggplot(data = data.frame(education_level), aes(x = \"\", y = education_level,\n                                               fill=names(education_level)), \n                                                 ) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\") +\n   geom_text(aes(label = paste0(round(education_level, 0), \"% \")), \n             position = position_stack(vjust = 0.5)) +\n  labs(title = \"Percentage of Education Levels\") +\n  labs(title = \"Percentage of Education Levels\",x=\"\",y=\"\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 15, face = \"bold\")\n  )\n\n\n\n\n\n\nDifference in total expense\nBased on the ANOVA test graph, it is apparent that there is a significant difference in the average total expense among participants with different education levels wtih p value smaller than 0.05. However, when conducting pairwise comparisons between the different total expense amounts, there is no significant difference observed.\n\n\nShow the code\nggbetweenstats(\n  data = df_average,\n  x = educationLevel, \n  y = Total_Expense,\n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\nWage distribution\nWhen comparing the distribution of wage, can see that graduate group has the highest income, while high school/college and people with low education have income lower than overall income mean.\n\n\nShow the code\nggplot(data = df_average, aes(x = Wage,y= educationLevel,fill = factor(stat(quantile))\n           ))+\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE,\n    jittered_points = TRUE) +\n  \n  scale_fill_viridis_d(name = \"Quartiles\")+\n  theme_ridges()+\n  theme(plot.margin = margin(50, 50, 20, 20),\n        legend.position = \"None\"\n       )+\n  ylab(\" \")+\n  ggtitle(\"Wage of Different education level\")+\n  geom_vline(aes(xintercept=mean(Wage)),\n             color=\"black\", \n             size=2)+\n  annotate(\"text\", x = mean(df_average$Wage), \n           y = 0, label = \"Overall    Mean\", color = \"black\", vjust = 0)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#different-age",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#different-age",
    "title": "Take Home Exercise 1",
    "section": "Different age",
    "text": "Different age\nBy categorizing participants into different age groups and comparing their total expenses and wages, observe that the differences among age groups are relatively small. This suggests that age may not be a significant factor influencing financial habits.\n\nDataPlot\n\n\n\n\nShow the code\ndf_age <- df_average %>% \n  mutate(age_bins = \n           cut(age, \n               breaks = c(17,25,35,45,55,60))\n)\n\nknitr::kable(head(df_age), format = 'html')\n\n\n\n\n \n  \n    participantId \n    Education \n    Food \n    Recreation \n    Shelter \n    Wage \n    RentAdjustment \n    Total_Expense \n    Month_count \n    householdSize \n    haveKids \n    age \n    educationLevel \n    interestGroup \n    joviality \n    age_bins \n  \n \n\n  \n    0 \n    38.0 \n    261.8 \n    365.3 \n    555.0 \n    9151.4 \n    0.0 \n    1220.1 \n    12 \n    3 \n    TRUE \n    36 \n    HighSchoolOrCollege \n    H \n    0.0016267 \n    (35,45] \n  \n  \n    1 \n    38.0 \n    263.9 \n    553.1 \n    555.0 \n    8031.3 \n    0.0 \n    1410.1 \n    12 \n    3 \n    TRUE \n    25 \n    HighSchoolOrCollege \n    B \n    0.3280865 \n    (17,25] \n  \n  \n    2 \n    12.8 \n    288.9 \n    347.7 \n    556.6 \n    7092.3 \n    0.0 \n    1206.0 \n    12 \n    3 \n    TRUE \n    35 \n    HighSchoolOrCollege \n    A \n    0.3934696 \n    (25,35] \n  \n  \n    3 \n    38.0 \n    283.0 \n    392.0 \n    555.0 \n    6855.8 \n    0.0 \n    1268.0 \n    12 \n    3 \n    TRUE \n    21 \n    HighSchoolOrCollege \n    I \n    0.1380634 \n    (17,25] \n  \n  \n    4 \n    12.8 \n    271.8 \n    526.3 \n    1404.5 \n    8837.9 \n    400.8 \n    2215.5 \n    12 \n    3 \n    TRUE \n    43 \n    Bachelors \n    H \n    0.8573967 \n    (35,45] \n  \n  \n    5 \n    12.8 \n    345.4 \n    428.3 \n    600.0 \n    1934.1 \n    0.0 \n    1386.5 \n    12 \n    3 \n    TRUE \n    32 \n    HighSchoolOrCollege \n    D \n    0.7729578 \n    (25,35] \n  \n\n\n\n\n\n\n\n\n\nShow the code\np1 <- ggplot(df_age, \n       aes(x = age_bins, \n           y = Wage)) +\n  stat_halfeye(aes(fill=age_bins)) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip()+\n  ylab(\" \")+\n  ggtitle(\"Wage of Different Age\")+\n  geom_hline(aes(yintercept=median(Wage)),\n             color=\"black\", \n             size=1)+\n  annotate(\"text\", x = min(as.numeric(df_age$age_bins)), y = 4000, \n           label = \"Median\", vjust = 1.5, hjust = 0)\n\np2 <- ggplot(df_age, \n       aes(x = age_bins, \n           y = Total_Expense)) +\n  stat_halfeye(aes(fill=age_bins)) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip()+\n  ylab(\" \")+\n  ggtitle(\"Total Expense of Different Age\")+\n  geom_hline(aes(yintercept=median(Total_Expense)),\n             color=\"black\", \n             size=1)+\n  theme(legend.position = \"None\")+\n  annotate(\"text\", x = min(as.numeric(df_age$age_bins)), y = 1500, \n           label = \"Median\", vjust = 1.5, hjust = 0)\n\np1/p2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take Home Exercise 2",
    "section": "",
    "text": "This is Mini-Challenge 2 of VAST Challenge 2023.\nThe country of Oceanus has sought FishEye International’s help in identifying companies possibly engaged in illegal, unreported, and unregulated (IUU) fishing. As part of the collaboration, FishEye’s analysts received import/export data for Oceanus’ marine and fishing industries. To facilitate their analysis, FishEye transformed the trade data into a knowledge graph. Using this knowledge graph, they hope to understand business relationships, including finding links that will help them stop IUU fishing and protect marine species that are affected by it. FishEye analysts found that node-link diagrams gave them a good high-level overview of the knowledge graph. However, they are now looking for visualizations that provide more detail about patterns for entities in the knowledge graph."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#installing-and-launching-r-packages",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#installing-and-launching-r-packages",
    "title": "Take Home Exercise 2",
    "section": "Installing and launching R packages",
    "text": "Installing and launching R packages\n\n\nShow the code\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts,jsonlite)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#impoort-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#impoort-data",
    "title": "Take Home Exercise 2",
    "section": "Impoort data",
    "text": "Impoort data\n\n\nShow the code\nMC2 <- fromJSON(\"data/mc2_challenge_graph.json\")\n\n\nAt the root-level, MC2 is a dictionary with graph-level properties specified as keys ( directed , mulitgraph , graph ). The nodes and links keys provide a dictionary of the nodes and links.\nBelow extract data frame from MC2 list as tibble table.\n\nNodes\nUse select to reorder column sequences, with id column in the first.\n\n\n\n\n\n\n\nCol name\nDescription\n\n\n\n\nid\nName of the company that originated (or received) the shipment\n\n\nshpcountry\nCountry the company most often associated with when shipping\n\n\nrcvcountry\nCountry the company most often associated with when receiving\n\n\n\n\n\nShow the code\nMC2_nodes <- as_tibble(MC2$nodes) %>% \n  select(id,shpcountry, rcvcountry)\nglimpse(MC2_nodes)\n\n\nRows: 34,576\nColumns: 3\n$ id         <chr> \"AquaDelight Inc and Son's\", \"BaringoAmerica Marine Ges.m.b…\n$ shpcountry <chr> \"Polarinda\", NA, \"Oceanus\", NA, \"Oceanus\", \"Kondanovia\", NA…\n$ rcvcountry <chr> \"Oceanus\", NA, \"Oceanus\", NA, \"Oceanus\", \"Utoporiana\", NA, …\n\n\n\n\nEdges\nUse select to drop columns of “valueofgoodusd” with lots of NA, and drop “dataset” which is no need.\n\n\nShow the code\nMC2_edges <- as_tibble(MC2$links) %>% \n  select(-valueofgoodsusd, -dataset)\n\nglimpse(MC2_edges)\n\n\nRows: 5,464,378\nColumns: 7\n$ arrivaldate      <chr> \"2034-02-12\", \"2034-03-13\", \"2028-02-07\", \"2028-02-23…\n$ hscode           <chr> \"630630\", \"630630\", \"470710\", \"470710\", \"470710\", \"47…\n$ valueofgoods_omu <dbl> 141015, 141015, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ volumeteu        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ weightkg         <int> 4780, 6125, 10855, 11250, 11165, 11290, 9000, 19490, …\n$ source           <chr> \"AquaDelight Inc and Son's\", \"AquaDelight Inc and Son…\n$ target           <chr> \"BaringoAmerica Marine Ges.m.b.H.\", \"BaringoAmerica M…\n\n\n\n\n\n\n\n\nNotice\n\n\n\nthe arrivaldate is treated as “Character” data type instead of date data type. Need to change the data type back to “Date”” data type.\n\n\n\n\n\n\n\n\n\nCol name\nDescription\n\n\n\n\narrivaldate\nDate the shipment arrived at port\n\n\nhscode\nHarmonized System code for the shipment\n\n\nvalueofgoods_omu\nCustoms-declared value of the total shipment\n\n\nvolumeteu\nThe volume of the shipment in ‘Twenty-foot equivalent units’, roughly\nhow many 20-foot standard containers would be required.\n\n\nweightkg\nThe weight of the shipment in kilograms\n\n\nSource/ target\nSome shipper(source) and receiver names/countries(target) was anonymized, so some are represented by numerical names."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#import-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#import-data",
    "title": "Take Home Exercise 2",
    "section": "Import data",
    "text": "Import data\n\n\nShow the code\nMC2 <- fromJSON(\"data/mc2_challenge_graph.json\")\n\n\nAt the root-level, MC2 is a dictionary with graph-level properties specified as keys ( directed , mulitgraph , graph ). The nodes and links keys provide a dictionary of the nodes and links.\nBelow extract data frame from MC2 list as tibble table.\n\nNodes\nUse select to reorder column sequences, with id column in the first.\n\n\n\n\n\n\n\nCol name\nDescription\n\n\n\n\nid\nName of the company that originated (or received) the shipment\n\n\nshpcountry\nCountry the company most often associated with when shipping\n\n\nrcvcountry\nCountry the company most often associated with when receiving\n\n\n\n\n\nShow the code\nMC2_nodes <- as_tibble(MC2$nodes) %>% \n  select(id,shpcountry, rcvcountry)\nglimpse(MC2_nodes)\n\n\nRows: 34,576\nColumns: 3\n$ id         <chr> \"AquaDelight Inc and Son's\", \"BaringoAmerica Marine Ges.m.b…\n$ shpcountry <chr> \"Polarinda\", NA, \"Oceanus\", NA, \"Oceanus\", \"Kondanovia\", NA…\n$ rcvcountry <chr> \"Oceanus\", NA, \"Oceanus\", NA, \"Oceanus\", \"Utoporiana\", NA, …\n\n\n\n\nEdges\nUse select to drop columns of “valueofgoodusd” with lots of NA, and drop “dataset” which is no need.\n\n\nShow the code\nMC2_edges <- as_tibble(MC2$links) %>% \n  select(-valueofgoodsusd, -dataset)\n\nglimpse(MC2_edges)\n\n\nRows: 5,464,378\nColumns: 7\n$ arrivaldate      <chr> \"2034-02-12\", \"2034-03-13\", \"2028-02-07\", \"2028-02-23…\n$ hscode           <chr> \"630630\", \"630630\", \"470710\", \"470710\", \"470710\", \"47…\n$ valueofgoods_omu <dbl> 141015, 141015, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ volumeteu        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ weightkg         <int> 4780, 6125, 10855, 11250, 11165, 11290, 9000, 19490, …\n$ source           <chr> \"AquaDelight Inc and Son's\", \"AquaDelight Inc and Son…\n$ target           <chr> \"BaringoAmerica Marine Ges.m.b.H.\", \"BaringoAmerica M…\n\n\n\n\n\n\n\n\nNotice\n\n\n\nthe arrivaldate is treated as “Character” data type instead of date data type. Need to change the data type back to “Date”” data type.\n\n\n\n\nShow the code\nMC2_edges <- MC2_edges %>% \n  mutate(arrival_date  = dmy(arrivaldate )) %>% \n  mutate(Year = year(arrivaldate))\n\nglimpse(MC2_edges)\n\n\nRows: 5,464,378\nColumns: 9\n$ arrivaldate      <chr> \"2034-02-12\", \"2034-03-13\", \"2028-02-07\", \"2028-02-23…\n$ hscode           <chr> \"630630\", \"630630\", \"470710\", \"470710\", \"470710\", \"47…\n$ valueofgoods_omu <dbl> 141015, 141015, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ volumeteu        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ weightkg         <int> 4780, 6125, 10855, 11250, 11165, 11290, 9000, 19490, …\n$ source           <chr> \"AquaDelight Inc and Son's\", \"AquaDelight Inc and Son…\n$ target           <chr> \"BaringoAmerica Marine Ges.m.b.H.\", \"BaringoAmerica M…\n$ arrival_date     <date> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Year             <dbl> 2034, 2034, 2028, 2028, 2028, 2028, 2028, 2028, 2028,…\n\n\n\n\n\n\n\n\n\nCol name\nDescription\n\n\n\n\narrivaldate\nDate the shipment arrived at port\n\n\nhscode\nHarmonized System code for the shipment\n\n\nvalueofgoods_omu\nCustoms-declared value of the total shipment\n\n\nvolumeteu\nThe volume of the shipment in ‘Twenty-foot equivalent units’, roughly\nhow many 20-foot standard containers would be required.\n\n\nweightkg\nThe weight of the shipment in kilograms\n\n\nSource/ target\nSome shipper(source) and receiver names/countries(target) was anonymized, so some are represented by numerical names."
  }
]