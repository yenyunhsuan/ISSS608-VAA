[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\nYen Yun Hsuan (Tina)\nLinkedIn: https://www.linkedin.com/in/tina-yen/\nemail: yhyen.2022@mitb.smu.edu.sg"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nlibrary(readr)\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Bar chart",
    "text": "Bar chart\n\nggplot(data=exam_data,\n       aes(x=RACE))+\n  geom_bar()\n\n\n\n\n\nHorizontal bar chart\nUse coordinate to change bar into horizontal\n\nggplot(data=exam_data,\n       aes(x=RACE))+\n  geom_bar()+\n  coord_flip()+\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#histogram",
    "title": "Hands-on Exercise 1",
    "section": "Histogram",
    "text": "Histogram\n\nhist(exam_data$MATHS)\n\n\n\n\ndefault setting of bins are 30\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=10, \n                color='red',\n                 fill='blue')+\n  ggtitle(\"Histogram\")\n\n\n\n\n\nggplot(data=exam_data,aes(x=MATHS,fill=GENDER))+\n  geom_histogram(bins=20, color=\"grey30\")#color in histogram is bin line color"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#density-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#density-plot",
    "title": "Hands-on Exercise 1",
    "section": "Density plot",
    "text": "Density plot\nit is a good way to replace histogram for continuous data if its distribution is smooth\n\nggplot(data=exam_data,aes(x=MATHS,colour=GENDER))+\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#dotplot",
    "title": "Hands-on Exercise 1",
    "section": "Dotplot",
    "text": "Dotplot\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot(dotsize=0.5,binwidth = 3)+\n  scale_y_continuous(NULL,breaks = NULL) #remove y-axis value"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-and-notch",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-and-notch",
    "title": "Hands-on Exercise 1",
    "section": "Boxplot and Notch",
    "text": "Boxplot and Notch\nNotch(缺口) can check by whether notches are overlapping to see whether medians are the same\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin-plot",
    "title": "Hands-on Exercise 1",
    "section": "Violin Plot",
    "text": "Violin Plot\nCan compare more clearly about the difference of distributions of multiple data\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatter-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatter-plot",
    "title": "Hands-on Exercise 1",
    "section": "Scatter plot",
    "text": "Scatter plot\n\nggplot(data=exam_data,aes(x=ENGLISH,y=MATHS))+\n  geom_point()+\n  geom_smooth()+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\nCombine scatter and boxplot\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_point(position=\"jitter\",size=0.2)+\n  geom_boxplot()\n\n\n\n\n\n\nStatistical summary\nAdd statistical summary can use stat_summary or overwrite by a new geom_ setting\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_point(position='jitter')+\n  geom_boxplot()+\n  stat_summary(geom=\"point\",fun='mean',color='red',size=4)\n\n\n\n\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_boxplot()+\n  geom_point(stat=\"summary\",        \n             colour =\"red\",          \n             size=4)\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#create-2d-panel",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#create-2d-panel",
    "title": "Hands-on Exercise 1",
    "section": "Create 2D panel",
    "text": "Create 2D panel\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20)+\n  facet_wrap(~CLASS)\n\n\n\n\n\nFacet_grid\nTwo discrete variables can use facet_grid\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20)+\n  facet_grid(~CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "exam_data <- read.csv(\"data/Exam_data.csv\")\n\n\nggrepel\nAn extension of ggplot that can deal with overlapping text For example, add “_repel” to geom_label\n\nggplot(data=exam_data,aes(x=MATHS,y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method=lm,linewidth=0.5)+\n  geom_label_repel(aes(label=ID),fontface='bold')+ \n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))+ \n  ggtitle('English scores versus Maths scores for Primary 3\"')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\nggplot theme\n\np1 <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color='grey25',\n                 fill='grey90')+\n  theme_gray()+\n  ggtitle(\"Distribution of math scores\")\np1\n\n\n\n\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color='grey25',\n                 fill='grey90')+\n  theme_economist()+\n  ggtitle(\"Distribution of math scores\")\n\n\n\n\n\n\nWorking with hrbthems package\nMore fonts and label placements choices, adjust by axis_title size, base_size, axis_text_size\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20,boundary=100,\n                 fill='grey25',\n                 color='grey90')+\n  ggtitle(\"Distribution of math scores\")+\n  theme_ipsum(axis_title_size = 20,base_size=20,grid='Y') \n\n\n\n\n\n\nBeyond Single Graph\n\np2 <- ggplot(data=exam_data,aes(x=ENGLISH))+\n  geom_histogram(bins=20, boundary=100,fill='grey20',color='grey90')+\n  ggtitle(\"Distribution of English score\")+\n  coord_cartesian(xlim=c(0,100))\np2\n\n\n\n\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\np3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nCombining two ggplot2 graphs\n\np1|p2\n\n\n\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting\n\n\nAdd tag\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nPlace plots on top of below other plots\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nUse patchwork and ggtheme\n\npatchwork <- p3| (p1 / p2)\npatchwork & theme_economist()+theme(plot.title = element_text(size = 9))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data",
    "title": "Hands-on_Ex03",
    "section": "Import data",
    "text": "Import data\n\nexam_data <- read.csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graph-with-ggiraphtooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graph-with-ggiraphtooltip",
    "title": "Hands-on_Ex03",
    "section": "Interactive graph with ggiraph,tooltip",
    "text": "Interactive graph with ggiraph,tooltip\n\nTooltip effect with tooltip aesthetic\n\nTooltip: show label when mouse scroll on it\nhistodot: dot stacks vertically\nsvg: Scalable Vector Graphics(adjust size so can with good resolution) for html page\nratio of 0.618 is a recommended ratio for visually pleasing\n\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(tooltip=ID),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method='histodot')+\n    scale_y_continuous(NULL,breaks=NULL)\ngirafe(\n  ggobj=plot,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\nDisplaying multiple information\n\nUse “$” to extract specific column from dataframe\n“paste0” to concatenate string\n\n\nexam_data$tooltip <- c(paste0(\n  \"Name =\", exam_data$ID, \"\\n Class =\", exam_data$CLASS\n))\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(tooltip=exam_data$tooltip),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method='histodot')+\n    scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\nWarning: Use of `exam_data$tooltip` is discouraged.\nℹ Use `tooltip` instead.\n\n\n\n\n\n\n\n\nCustomising Tooltip\nUse opts_tooltip() to customize interactive label s font and color\n\ntooltip_css <- \"background-color:white;\nfont-style:bold; color:blue;\"\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(tooltip=ID),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method=\"histodot\")+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(\n      css=tooltip_css))\n)\n\n\n\n\n\n\n\nDisplaying statistics\n\naccuracy: 0.01 means to round to two decimal places\nymax: upper limit of 90% interval of y, y: average\nscales::number is to format value with accuracy (0.01)\nafter_stat:tooltip applied after calculating statistic values\nfun.data: summary statistics, mean_se:calculate mean and standard error\n\n\ntooltip <- function(y,ymax,accuracy=0.001){\n  mean <- scales::number(y,accuracy=accuracy)\n  se <- scales::number(ymax-y,accuracy = accuracy)\n  paste0(\"Mean math scores\",mean,\" +/- \",se)\n}\n\ngg_point <- ggplot(data=exam_data,aes(x=RACE)\n               )+\n  stat_summary(aes(y=MATHS,\n                   tooltip=after_stat(\n                     tooltip(y,ymax))),\n  fun.data=\"mean_se\",\n  geom=GeomInteractiveCol,\n  fill=\"lightblue\"\n    )+\n  stat_summary(aes(y=MATHS),\n  fun.data=\"mean_se\",\n  geom=\"errorbar\",width=0.2,size=0.2)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(\n  ggobj=gg_point,\n  width_svg = 8,\n  height_svg = 8*0.6188)\n\n\n\n\n\n\n\nHighlight effect\ndata_id allows highlighting effect on dotplot with defined category, default setting is filling with orange color.\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(data_id=CLASS),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method=\"histodot\")+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg = 6,\n  height_svg=6*0.618\n)\n\n\n\n\n\n\n\nChanging hovering color setting\nopacity: changing the transparency, opacity=0.2 means with 80% transparency\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(data_id=CLASS),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method=\"histodot\")+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg = 6,\n  height_svg=6*0.618,\n  options = list(\n    opts_hover(css=\"fill: #202020;\"),\n    opts_hover_inv(css=\"opacity:0.1;\")\n    \n  )\n)\n\n\n\n\n\n\n\nCombine tooltip(label) and hovering effect\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(\n    aes(tooltip=CLASS,data_id=CLASS),\n    stackgroups=TRUE,\n    binwidth=2,\n    method=\"histodot\"\n  )+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg=6,\n  height_svg=6*0.618,\n  options = list(\n    opts_hover(css=\"fill:#202020;\"),\n    opts_hover_inv(css=\"opacity:0.2;\")\n  )\n  \n)\n\n\n\n\n\n\n\nInsert link on the graph\n\nadd onclick column to exam_data\nsprintf: combine new string with URL\n“%s%s”, first %s is the link, second %s is new adding string\nas.character: convert to character(string) type, and adding to URL\n\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n \"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\n as.character(exam_data$ID))\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(\n    aes(onclick=onclick),\n    stackgroups=TRUE,\n    binwidth=2,\n    method=\"histodot\"\n  )+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg=6,\n  height_svg=6*0.618\n  \n)\n\n\n\n\n\n\n\nCoordinate multiple views\n\nopts_hover: setting about hovering point\nopts_hover_inv: setting for other part when hovering\n\n\nplot1 <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(\n    aes(data_id=ID),\n    stackgroups=TRUE,\n    binwidth=2,\n    method=\"histodot\"\n  )+\n  coord_cartesian(xlim=c(0,100))+\n  scale_y_continuous(NULL,breaks=NULL)\n\nplot2 <- ggplot(data=exam_data,aes(x=ENGLISH))+\n  geom_dotplot_interactive(\n    aes(data_id=ID),\n    stackgroups=TRUE,\n    binwidth=2,\n    method=\"histodot\"\n  )+\n  coord_cartesian(xlim=c(0,100))+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(code = print(plot1+plot2),\n  width_svg=6,\n  height_svg=3,\n  options=list(\n    opts_hover(css=\"fill: #202020;\"),\n    opts_hover_inv(css=\"opacity:0.2;\")\n  \n))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graphs-by-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graphs-by-plotly",
    "title": "Hands-on_Ex03",
    "section": "Interactive graphs by plotly",
    "text": "Interactive graphs by plotly\n\nInteractive scatter plot\n\n#|message: false\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -> https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -> https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n\n\nAdding visual effect\n\nplot_ly(data= exam_data,\n       x= ~MATHS,\n       y= ~ENGLISH,\n       color= ~RACE)\n\n\n\n\n\n\n\nCoordinate multiple views\n\nhighlight_key: create shared data for two plots\nsubplot: coordinate two plots together\n\n\nd <- highlight_key(exam_data)\n\np1 <- ggplot(data=d,aes(x=MATHS,y=ENGLISH))+\n  geom_point(size=2)+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\np2 <- ggplot(data=d,aes(x=MATHS,y=SCIENCE))+\n  geom_point(size=2)+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\nsubplot(ggplotly(p1),ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graphs-by-ggplotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graphs-by-ggplotly",
    "title": "Hands-on_Ex03",
    "section": "Interactive graphs by ggplotly",
    "text": "Interactive graphs by ggplotly\n\nplot <- ggplot(data=exam_data,aes(x=MATHS,y=ENGLISH))+\n  geom_point(size=2)+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\n\nggplotly(plot)\n\n\n\n\n\n\nData table\nclass=“compact” means to have compact layout for the table\n\nDT::datatable(exam_data,class=\"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#link-table-with-graph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#link-table-with-graph",
    "title": "Hands-on_Ex03",
    "section": "Link table with graph",
    "text": "Link table with graph\n\nhighlight_key: assign identifier to dataframe\nplotly_selected: track corresponding point when mouse click on table row\ncrosstalk: combine table and graph\nbscols: create layout with two elements\n\n\ndata <- highlight_key(exam_data)\n\np <- ggplot(data,aes(ENGLISH,MATHS))+\n  geom_point(siz=1)+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\nWarning in geom_point(siz = 1): Ignoring unknown parameters: `siz`\n\ngg <- highlight(ggplotly(p),\"plotly_selected\")\n\ncrosstalk::bscols(gg,DT::datatable(data),widths = 5)\n\nSetting the `off` event (i.e., 'plotly_deselect') to match the `on` event (i.e., 'plotly_selected'). You can change this default via the `highlight()` function."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data-1",
    "title": "Hands-on_Ex03",
    "section": "Import data",
    "text": "Import data\n\nmutate_each or mutate(across())：apply given function to selected columns\n%>% pass function/results to next step\nfuns all all_of: create a list of function\nfactor: turn column into categorical variable\n\n\ncol <- c(\"Country\",\"Continent\")\nglobal <- read_xls(\"data/GlobalPopulation.xls\",\n                   sheet=\"Data\") %>% \n  mutate(across(all_of(col), factor)) %>% \n  mutate(Year=as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#population-bubble-plot",
    "title": "Hands-on_Ex03",
    "section": "Population bubble plot",
    "text": "Population bubble plot\n\nstatic plot\n\nggplot(global,aes(x=Old,y=Young,size=Population,colour=Country))+\n  geom_point(alpha=0.7,show.legend = FALSE)+\n  scale_color_manual(values=country_colors)+\n  scale_size(range=c(2,10))+\n  labs(title='Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')\n\n\n\n\n\n\nAnimated plot with gganimate\nease_aes(): the moving way of plot element, default is linear\n\nggplot(global,aes(x=Old,y=Young,size=Population,colour=Country))+\n  geom_point(alpha=0.7,show.legend = FALSE)+\n  scale_color_manual(values=country_colors)+\n  scale_size(range=c(2,10))+\n  labs(title='Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')+\n  transition_time(Year)+\n  ease_aes(\"linear\")\n\n\n\n\n\n\nAnimated plot with ggplotly\n\nplot <- ggplot(global,aes(x=Old,y=Young,size=Population,colour=Country))+\n  geom_point(aes(size=Population, frame=Year),\n             alpha=0.7,show.legend = FALSE)+\n  scale_color_manual(values=country_colors)+\n  scale_size(range=c(2,10))+\n  labs( x = '% Aged', \n       y = '% Young')\n\nWarning in geom_point(aes(size = Population, frame = Year), alpha = 0.7, :\nIgnoring unknown aesthetics: frame\n\nggplotly(plot)\n\nWarning in p$x$data[firstFrame] <- p$x$frames[[1]]$data: number of items to\nreplace is not a multiple of replacement length\n\n\n\n\n\n\n\n\nUsing plot_ly()\n\nbp <- global %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In Class Exercise 1",
    "section": "",
    "text": "pacman::p_load(tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#import-data",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#import-data",
    "title": "In Class Exercise 1",
    "section": "Import data",
    "text": "Import data\n\nexam_data <- read.csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#horizontal-bar-chart",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#horizontal-bar-chart",
    "title": "In Class Exercise 1",
    "section": "Horizontal bar chart",
    "text": "Horizontal bar chart\n\nggplot(data=exam_data,\n       aes(x=RACE))+\n  geom_bar()+\n  coord_flip()+\n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill='lightblue',color = 'lightblue'),\n    panel.grid.major = element_line(colour = 'white',size = 0.5,linewidth =  'solid'),\n    panel.grid.minor = element_line(colour = 'white',size=0.25,linewidth = 'solid')\n  )\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\n\n\n\n\nBar chart with label\n\nBar chart with label 1. function(x) counts the occurrence frequency of different x and minor constant length(x), allowing x axis to sort by the count value by descending order.\nstate=“count” indicate will use count method and applies to ..count.. and the plot\naes() to map with variables in the plot. paste0 is to concatenate strings\n“after_stat(count)” or “..count..”(new version) means count of observations in each category\nvjust is the lable position, -1 means a little above from the bar.\nuse theme(axis.title.y to adjust y axis title angle)\n\n\nggplot(data=exam_data,aes(x=reorder(RACE,RACE,function(x)-length(x))))+\n  geom_bar()+\n  ylim(0,220)+\n  xlab(\"RACE\")+\n  ylab(\"No. of \\nPupils\")+\n  geom_text(stat =\"count\",aes(label=paste0(after_stat(count),\",\",                                       round(after_stat(count)/sum(after_stat(count))*100,1),\"%\")),\n            vjust=-1)+\n  theme(axis.title.y=element_text(angle=0))\n\n\n\n\n\n\nUse fct_infreq() of forcats package\n\nUse Command + Shift + M to type %>%\nfct_infreq can count the occurrence frequency of each category, and reorder by descending order\nMutate create a new column, and use %>% to modify and apply new changes to the data frame.\n\n\nexam_data %>% \n  mutate(RACE=fct_infreq(RACE)) %>% \n  ggplot(aes(RACE))+\n  geom_bar()+\n  ylim(0,220)+\n  xlab(\"RACE\")+\n  ylab(\"No. of \\nPupils\")+\n  geom_text(stat =\"count\",aes(label=paste0(after_stat(count),\",\",                                       round(after_stat(count)/sum(after_stat(count))*100,1),\"%\")),\n            vjust=-1)+\n  theme(axis.title.y=element_text(angle=0))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#histogram",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#histogram",
    "title": "In Class Exercise 1",
    "section": "Histogram",
    "text": "Histogram\n\nAdd mean and median line\n\nUse vline to draw vertical line.\nxintercept as x-axis variable of MATHS\nna.rm=T(True), means apply method of removing missing values before caculating mean.\n\n\nggplot(data=exam_data,aes(MATHS))+\n  geom_histogram(bins=20,boundary=100,fill='lightblue',color='black')+\n  geom_vline(aes(xintercept=mean(MATHS,na.rm=T)),color='red',\n             linetype='dashed',size=1)+\n  geom_vline(aes(xintercept=median(MATHS,na.rm=TRUE)),color='grey',linetype='dashed',\n             size=1)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\nColor comparison and facet grid\n\nguides(fill=FALSE) means to turn off legend\ncreate new histogram, one use sub_data without gender column, one use data and with black line and fill different color by gender.\n\n\ndata <- exam_data\nsub_data <- data[,-3]\n\nggplot(data,aes(x=ENGLISH,fill=GENDER))+\n  geom_histogram(data=sub_data,fill='grey',alpha=0.5)+\n  geom_histogram(colour='black')+\n  facet_wrap(~GENDER)+\n  guides(fill=FALSE)+\n  theme_bw()\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#scatter-plot-with-quadrant",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#scatter-plot-with-quadrant",
    "title": "In Class Exercise 1",
    "section": "Scatter plot with quadrant",
    "text": "Scatter plot with quadrant\n\nggplot(data=exam_data,aes(x=MATHS,y=ENGLISH))+\n  geom_point()+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))+\n  geom_hline(aes(yintercept=50),color='grey',size=1,linetype='dashed')+\n  geom_vline(aes(xintercept=50),color='grey',size=1,linetype='dashed')"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to Visual Analytics and Applications homepage. In this website, you will find my coursework and portfolio prepared for this course."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(ggstatsplot,tidyverse)\n\n\nexam_data <- read.csv(\"data/Exam_data.csv\")\n\n\n\n\n\nset.seed(1234)\ngghistostats(data=exam_data,x=ENGLISH, type=\"bayes\",\n             test.values=70,xlab=\"English score\")"
  }
]