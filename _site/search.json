[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\nYen Yun Hsuan (Tina)\nLinkedIn: https://www.linkedin.com/in/tina-yen/\nemail: yhyen.2022@mitb.smu.edu.sg"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nlibrary(readr)\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Bar chart",
    "text": "Bar chart\n\nggplot(data=exam_data,\n       aes(x=RACE))+\n  geom_bar()\n\n\n\n\n\nHorizontal bar chart\nUse coordinate to change bar into horizontal\n\nggplot(data=exam_data,\n       aes(x=RACE))+\n  geom_bar()+\n  coord_flip()+\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#histogram",
    "title": "Hands-on Exercise 1",
    "section": "Histogram",
    "text": "Histogram\n\nhist(exam_data$MATHS)\n\n\n\n\ndefault setting of bins are 30\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=10, \n                color='red',\n                 fill='blue')+\n  ggtitle(\"Histogram\")\n\n\n\n\n\nggplot(data=exam_data,aes(x=MATHS,fill=GENDER))+\n  geom_histogram(bins=20, color=\"grey30\")#color in histogram is bin line color"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#density-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#density-plot",
    "title": "Hands-on Exercise 1",
    "section": "Density plot",
    "text": "Density plot\nit is a good way to replace histogram for continuous data if its distribution is smooth\n\nggplot(data=exam_data,aes(x=MATHS,colour=GENDER))+\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#dotplot",
    "title": "Hands-on Exercise 1",
    "section": "Dotplot",
    "text": "Dotplot\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot(dotsize=0.5,binwidth = 3)+\n  scale_y_continuous(NULL,breaks = NULL) #remove y-axis value"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-and-notch",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#boxplot-and-notch",
    "title": "Hands-on Exercise 1",
    "section": "Boxplot and Notch",
    "text": "Boxplot and Notch\nNotch(缺口) can check by whether notches are overlapping to see whether medians are the same\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_boxplot(notch=TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#violin-plot",
    "title": "Hands-on Exercise 1",
    "section": "Violin Plot",
    "text": "Violin Plot\nCan compare more clearly about the difference of distributions of multiple data\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatter-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#scatter-plot",
    "title": "Hands-on Exercise 1",
    "section": "Scatter plot",
    "text": "Scatter plot\n\nggplot(data=exam_data,aes(x=ENGLISH,y=MATHS))+\n  geom_point()+\n  geom_smooth()+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\nCombine scatter and boxplot\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_point(position=\"jitter\",size=0.2)+\n  geom_boxplot()\n\n\n\n\n\n\nStatistical summary\nAdd statistical summary can use stat_summary or overwrite by a new geom_ setting\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_point(position='jitter')+\n  geom_boxplot()+\n  stat_summary(geom=\"point\",fun='mean',color='red',size=4)\n\n\n\n\n\nggplot(data=exam_data,aes(x=GENDER,y=MATHS))+\n  geom_boxplot()+\n  geom_point(stat=\"summary\",        \n             colour =\"red\",          \n             size=4)\n\nNo summary function supplied, defaulting to `mean_se()`"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#create-2d-panel",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#create-2d-panel",
    "title": "Hands-on Exercise 1",
    "section": "Create 2D panel",
    "text": "Create 2D panel\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20)+\n  facet_wrap(~CLASS)\n\n\n\n\n\nFacet_grid\nTwo discrete variables can use facet_grid\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20)+\n  facet_grid(~CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "exam_data <- read.csv(\"data/Exam_data.csv\")\n\n\nggrepel\nAn extension of ggplot that can deal with overlapping text For example, add “_repel” to geom_label\n\nggplot(data=exam_data,aes(x=MATHS,y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method=lm,linewidth=0.5)+\n  geom_label_repel(aes(label=ID),fontface='bold')+ \n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))+ \n  ggtitle('English scores versus Maths scores for Primary 3\"')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\nggplot theme\n\np1 <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color='grey25',\n                 fill='grey90')+\n  theme_gray()+\n  ggtitle(\"Distribution of math scores\")\np1\n\n\n\n\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color='grey25',\n                 fill='grey90')+\n  theme_economist()+\n  ggtitle(\"Distribution of math scores\")\n\n\n\n\n\n\nWorking with hrbthems package\nMore fonts and label placements choices, adjust by axis_title size, base_size, axis_text_size\n\nggplot(data=exam_data,aes(x=MATHS))+\n  geom_histogram(bins=20,boundary=100,\n                 fill='grey25',\n                 color='grey90')+\n  ggtitle(\"Distribution of math scores\")+\n  theme_ipsum(axis_title_size = 20,base_size=20,grid='Y') \n\n\n\n\n\n\nBeyond Single Graph\n\np2 <- ggplot(data=exam_data,aes(x=ENGLISH))+\n  geom_histogram(bins=20, boundary=100,fill='grey20',color='grey90')+\n  ggtitle(\"Distribution of English score\")+\n  coord_cartesian(xlim=c(0,100))\np2\n\n\n\n\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\np3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nCombining two ggplot2 graphs\n\np1|p2\n\n\n\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting\n\n\nAdd tag\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nPlace plots on top of below other plots\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nUse patchwork and ggtheme\n\npatchwork <- p3| (p1 / p2)\npatchwork & theme_economist()+theme(plot.title = element_text(size = 9))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data",
    "title": "Hands-on_Ex03",
    "section": "Import data",
    "text": "Import data\n\nexam_data <- read.csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graph-with-ggiraphtooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graph-with-ggiraphtooltip",
    "title": "Hands-on_Ex03",
    "section": "Interactive graph with ggiraph,tooltip",
    "text": "Interactive graph with ggiraph,tooltip\n\nTooltip effect with tooltip aesthetic\n\nTooltip: show label when mouse scroll on it\nhistodot: dot stacks vertically\nsvg: Scalable Vector Graphics(adjust size so can with good resolution) for html page\nratio of 0.618 is a recommended ratio for visually pleasing\n\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(tooltip=ID),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method='histodot')+\n    scale_y_continuous(NULL,breaks=NULL)\ngirafe(\n  ggobj=plot,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\nDisplaying multiple information\n\nUse “$” to extract specific column from dataframe\n“paste0” to concatenate string\n\n\nexam_data$tooltip <- c(paste0(\n  \"Name =\", exam_data$ID, \"\\n Class =\", exam_data$CLASS\n))\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(tooltip=exam_data$tooltip),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method='histodot')+\n    scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\nWarning: Use of `exam_data$tooltip` is discouraged.\nℹ Use `tooltip` instead.\n\n\n\n\n\n\n\n\nCustomising Tooltip\nUse opts_tooltip() to customize interactive label s font and color\n\ntooltip_css <- \"background-color:white;\nfont-style:bold; color:blue;\"\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(tooltip=ID),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method=\"histodot\")+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(\n    opts_tooltip(\n      css=tooltip_css))\n)\n\n\n\n\n\n\n\nDisplaying statistics\n\naccuracy: 0.01 means to round to two decimal places\nymax: upper limit of 90% interval of y, y: average\nscales::number is to format value with accuracy (0.01)\nafter_stat:tooltip applied after calculating statistic values\nfun.data: summary statistics, mean_se:calculate mean and standard error\n\n\ntooltip <- function(y,ymax,accuracy=0.001){\n  mean <- scales::number(y,accuracy=accuracy)\n  se <- scales::number(ymax-y,accuracy = accuracy)\n  paste0(\"Mean math scores\",mean,\" +/- \",se)\n}\n\ngg_point <- ggplot(data=exam_data,aes(x=RACE)\n               )+\n  stat_summary(aes(y=MATHS,\n                   tooltip=after_stat(\n                     tooltip(y,ymax))),\n  fun.data=\"mean_se\",\n  geom=GeomInteractiveCol,\n  fill=\"lightblue\"\n    )+\n  stat_summary(aes(y=MATHS),\n  fun.data=\"mean_se\",\n  geom=\"errorbar\",width=0.2,size=0.2)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(\n  ggobj=gg_point,\n  width_svg = 8,\n  height_svg = 8*0.6188)\n\n\n\n\n\n\n\nHighlight effect\ndata_id allows highlighting effect on dotplot with defined category, default setting is filling with orange color.\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(data_id=CLASS),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method=\"histodot\")+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg = 6,\n  height_svg=6*0.618\n)\n\n\n\n\n\n\n\nChanging hovering color setting\nopacity: changing the transparency, opacity=0.2 means with 80% transparency\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(aes(data_id=CLASS),\n                           stackgroups=TRUE,\n                           binwidth=1,\n                           method=\"histodot\")+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg = 6,\n  height_svg=6*0.618,\n  options = list(\n    opts_hover(css=\"fill: #202020;\"),\n    opts_hover_inv(css=\"opacity:0.1;\")\n    \n  )\n)\n\n\n\n\n\n\n\nCombine tooltip(label) and hovering effect\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(\n    aes(tooltip=CLASS,data_id=CLASS),\n    stackgroups=TRUE,\n    binwidth=2,\n    method=\"histodot\"\n  )+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg=6,\n  height_svg=6*0.618,\n  options = list(\n    opts_hover(css=\"fill:#202020;\"),\n    opts_hover_inv(css=\"opacity:0.2;\")\n  )\n  \n)\n\n\n\n\n\n\n\nInsert link on the graph\n\nadd onclick column to exam_data\nsprintf: combine new string with URL\n“%s%s”, first %s is the link, second %s is new adding string\nas.character: convert to character(string) type, and adding to URL\n\n\nexam_data$onclick <- sprintf(\"window.open(\\\"%s%s\\\")\",\n \"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\n as.character(exam_data$ID))\n\nplot <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(\n    aes(onclick=onclick),\n    stackgroups=TRUE,\n    binwidth=2,\n    method=\"histodot\"\n  )+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(\n  ggobj=plot,\n  width_svg=6,\n  height_svg=6*0.618\n  \n)\n\n\n\n\n\n\n\nCoordinate multiple views\n\nopts_hover: setting about hovering point\nopts_hover_inv: setting for other part when hovering\n\n\nplot1 <- ggplot(data=exam_data,aes(x=MATHS))+\n  geom_dotplot_interactive(\n    aes(data_id=ID),\n    stackgroups=TRUE,\n    binwidth=2,\n    method=\"histodot\"\n  )+\n  coord_cartesian(xlim=c(0,100))+\n  scale_y_continuous(NULL,breaks=NULL)\n\nplot2 <- ggplot(data=exam_data,aes(x=ENGLISH))+\n  geom_dotplot_interactive(\n    aes(data_id=ID),\n    stackgroups=TRUE,\n    binwidth=2,\n    method=\"histodot\"\n  )+\n  coord_cartesian(xlim=c(0,100))+\n  scale_y_continuous(NULL,breaks=NULL)\n\ngirafe(code = print(plot1+plot2),\n  width_svg=6,\n  height_svg=3,\n  options=list(\n    opts_hover(css=\"fill: #202020;\"),\n    opts_hover_inv(css=\"opacity:0.2;\")\n  \n))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graphs-by-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graphs-by-plotly",
    "title": "Hands-on_Ex03",
    "section": "Interactive graphs by plotly",
    "text": "Interactive graphs by plotly\n\nInteractive scatter plot\n\n#|message: false\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -> https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -> https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n\n\nAdding visual effect\n\nplot_ly(data= exam_data,\n       x= ~MATHS,\n       y= ~ENGLISH,\n       color= ~RACE)\n\n\n\n\n\n\n\nCoordinate multiple views\n\nhighlight_key: create shared data for two plots\nsubplot: coordinate two plots together\n\n\nd <- highlight_key(exam_data)\n\np1 <- ggplot(data=d,aes(x=MATHS,y=ENGLISH))+\n  geom_point(size=2)+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\np2 <- ggplot(data=d,aes(x=MATHS,y=SCIENCE))+\n  geom_point(size=2)+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\nsubplot(ggplotly(p1),ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graphs-by-ggplotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-graphs-by-ggplotly",
    "title": "Hands-on_Ex03",
    "section": "Interactive graphs by ggplotly",
    "text": "Interactive graphs by ggplotly\n\nplot <- ggplot(data=exam_data,aes(x=MATHS,y=ENGLISH))+\n  geom_point(size=2)+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\n\nggplotly(plot)\n\n\n\n\n\n\nData table\nclass=“compact” means to have compact layout for the table\n\nDT::datatable(exam_data,class=\"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#link-table-with-graph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#link-table-with-graph",
    "title": "Hands-on_Ex03",
    "section": "Link table with graph",
    "text": "Link table with graph\n\nhighlight_key: assign identifier to dataframe\nplotly_selected: track corresponding point when mouse click on table row\ncrosstalk: combine table and graph\nbscols: create layout with two elements\n\n\ndata <- highlight_key(exam_data)\n\np <- ggplot(data,aes(ENGLISH,MATHS))+\n  geom_point(siz=1)+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))\n\nWarning in geom_point(siz = 1): Ignoring unknown parameters: `siz`\n\ngg <- highlight(ggplotly(p),\"plotly_selected\")\n\ncrosstalk::bscols(gg,DT::datatable(data),widths = 5)\n\nSetting the `off` event (i.e., 'plotly_deselect') to match the `on` event (i.e., 'plotly_selected'). You can change this default via the `highlight()` function."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#import-data-1",
    "title": "Hands-on_Ex03",
    "section": "Import data",
    "text": "Import data\n\nmutate_each or mutate(across())：apply given function to selected columns\n%>% pass function/results to next step\nfuns all all_of: create a list of function\nfactor: turn column into categorical variable\n\n\ncol <- c(\"Country\",\"Continent\")\nglobal <- read_xls(\"data/GlobalPopulation.xls\",\n                   sheet=\"Data\") %>% \n  mutate(across(all_of(col), factor)) %>% \n  mutate(Year=as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#population-bubble-plot",
    "title": "Hands-on_Ex03",
    "section": "Population bubble plot",
    "text": "Population bubble plot\n\nstatic plot\n\nggplot(global,aes(x=Old,y=Young,size=Population,colour=Country))+\n  geom_point(alpha=0.7,show.legend = FALSE)+\n  scale_color_manual(values=country_colors)+\n  scale_size(range=c(2,10))+\n  labs(title='Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')\n\n\n\n\n\n\nAnimated plot with gganimate\nease_aes(): the moving way of plot element, default is linear\n\nggplot(global,aes(x=Old,y=Young,size=Population,colour=Country))+\n  geom_point(alpha=0.7,show.legend = FALSE)+\n  scale_color_manual(values=country_colors)+\n  scale_size(range=c(2,10))+\n  labs(title='Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')+\n  transition_time(Year)+\n  ease_aes(\"linear\")\n\n\n\n\n\n\nAnimated plot with ggplotly\n\nplot <- ggplot(global,aes(x=Old,y=Young,size=Population,colour=Country))+\n  geom_point(aes(size=Population, frame=Year),\n             alpha=0.7,show.legend = FALSE)+\n  scale_color_manual(values=country_colors)+\n  scale_size(range=c(2,10))+\n  labs( x = '% Aged', \n       y = '% Young')\n\nWarning in geom_point(aes(size = Population, frame = Year), alpha = 0.7, :\nIgnoring unknown aesthetics: frame\n\nggplotly(plot)\n\nWarning in p$x$data[firstFrame] <- p$x$frames[[1]]$data: number of items to\nreplace is not a multiple of replacement length\n\n\n\n\n\n\n\n\nUsing plot_ly()\n\nbp <- global %>%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent, \n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "In Class Exercise 1",
    "section": "",
    "text": "pacman::p_load(tidyverse)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#import-data",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#import-data",
    "title": "In Class Exercise 1",
    "section": "Import data",
    "text": "Import data\n\nexam_data <- read.csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#horizontal-bar-chart",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#horizontal-bar-chart",
    "title": "In Class Exercise 1",
    "section": "Horizontal bar chart",
    "text": "Horizontal bar chart\n\nggplot(data=exam_data,\n       aes(x=RACE))+\n  geom_bar()+\n  coord_flip()+\n  theme_minimal()+\n  theme(\n    panel.background = element_rect(fill='lightblue',color = 'lightblue'),\n    panel.grid.major = element_line(colour = 'white',size = 0.5,linewidth =  'solid'),\n    panel.grid.minor = element_line(colour = 'white',size=0.25,linewidth = 'solid')\n  )\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\n\n\n\n\nBar chart with label\n\nBar chart with label 1. function(x) counts the occurrence frequency of different x and minor constant length(x), allowing x axis to sort by the count value by descending order.\nstate=“count” indicate will use count method and applies to ..count.. and the plot\naes() to map with variables in the plot. paste0 is to concatenate strings\n“after_stat(count)” or “..count..”(new version) means count of observations in each category\nvjust is the lable position, -1 means a little above from the bar.\nuse theme(axis.title.y to adjust y axis title angle)\n\n\nggplot(data=exam_data,aes(x=reorder(RACE,RACE,function(x)-length(x))))+\n  geom_bar()+\n  ylim(0,220)+\n  xlab(\"RACE\")+\n  ylab(\"No. of \\nPupils\")+\n  geom_text(stat =\"count\",aes(label=paste0(after_stat(count),\",\",                                       round(after_stat(count)/sum(after_stat(count))*100,1),\"%\")),\n            vjust=-1)+\n  theme(axis.title.y=element_text(angle=0))\n\n\n\n\n\n\nUse fct_infreq() of forcats package\n\nUse Command + Shift + M to type %>%\nfct_infreq can count the occurrence frequency of each category, and reorder by descending order\nMutate create a new column, and use %>% to modify and apply new changes to the data frame.\n\n\nexam_data %>% \n  mutate(RACE=fct_infreq(RACE)) %>% \n  ggplot(aes(RACE))+\n  geom_bar()+\n  ylim(0,220)+\n  xlab(\"RACE\")+\n  ylab(\"No. of \\nPupils\")+\n  geom_text(stat =\"count\",aes(label=paste0(after_stat(count),\",\",                                       round(after_stat(count)/sum(after_stat(count))*100,1),\"%\")),\n            vjust=-1)+\n  theme(axis.title.y=element_text(angle=0))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#histogram",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#histogram",
    "title": "In Class Exercise 1",
    "section": "Histogram",
    "text": "Histogram\n\nAdd mean and median line\n\nUse vline to draw vertical line.\nxintercept as x-axis variable of MATHS\nna.rm=T(True), means apply method of removing missing values before caculating mean.\n\n\nggplot(data=exam_data,aes(MATHS))+\n  geom_histogram(bins=20,boundary=100,fill='lightblue',color='black')+\n  geom_vline(aes(xintercept=mean(MATHS,na.rm=T)),color='red',\n             linetype='dashed',size=1)+\n  geom_vline(aes(xintercept=median(MATHS,na.rm=TRUE)),color='grey',linetype='dashed',\n             size=1)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\nColor comparison and facet grid\n\nguides(fill=FALSE) means to turn off legend\ncreate new histogram, one use sub_data without gender column, one use data and with black line and fill different color by gender.\n\n\ndata <- exam_data\nsub_data <- data[,-3]\n\nggplot(data,aes(x=ENGLISH,fill=GENDER))+\n  geom_histogram(data=sub_data,fill='grey',alpha=0.5)+\n  geom_histogram(colour='black')+\n  facet_wrap(~GENDER)+\n  guides(fill=FALSE)+\n  theme_bw()\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#scatter-plot-with-quadrant",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#scatter-plot-with-quadrant",
    "title": "In Class Exercise 1",
    "section": "Scatter plot with quadrant",
    "text": "Scatter plot with quadrant\n\nggplot(data=exam_data,aes(x=MATHS,y=ENGLISH))+\n  geom_point()+\n  coord_cartesian(xlim=c(0,100),ylim=c(0,100))+\n  geom_hline(aes(yintercept=50),color='grey',size=1,linetype='dashed')+\n  geom_vline(aes(xintercept=50),color='grey',size=1,linetype='dashed')"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to Visual Analytics and Applications homepage. In this website, you will find my coursework and portfolio prepared for this course."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate,ggstatsplot,readxl, performance, parameters, see)\n\n\nlibrary(readr)\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\nset.seed(1234)\ngghistostats(data=exam_data,x=ENGLISH, type=\"bayes\",\n             test.values=70,xlab=\"English score\")\n\n\n\n\n\n\n\nCompare distribution/density of female and male performance in Math test\n\nggbetweenstats(\n  data=exam_data,\n  x=GENDER,\n  y=MATHS,\n  type='np',\n  message=FALSE)\n\n\n\n\n\n\n\n\nggbetweenstats(data=exam_data,\n               x=RACE,\n               y=ENGLISH,\n               type='p',\n               mean.ci=TRUE,\n               pairwise.comparisons = TRUE,\n               pairwise.display = 's',\n               p.adjust.method = 'fdr',\n               message=FALSE\n               )\n\n\n\n\n\n\n\nCan see Pearson correlation coefficient\n\nggscatterstats(data=exam_data,\n               x=MATHS,\n               y=ENGLISH,\n               marginal = FALSE\n               )\n\n\n\n\n\n\n\n\nexam=exam_data %>% \n  mutate(MATHS_bins=\n           cut(MATHS,\n               breaks=c(0,60,75,85,100)))\n\nggbarstats(data=exam,\n           x=MATHS_bins,\n           y=GENDER)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class_Ex03",
    "section": "",
    "text": "Tableau Public: https://public.tableau.com/app/profile/yun.hsuan.yen"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class_Ex04",
    "section": "",
    "text": "rstatix: transform the statistic test result into data table instead of just text\n\n\nShow code\npacman::p_load(rstatix,gt,patchwork,tidyverse)\n\n\npackage 'rstatix' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\Tina\\AppData\\Local\\Temp\\RtmpwRHWb7\\downloaded_packages\npackage 'gt' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\Tina\\AppData\\Local\\Temp\\RtmpwRHWb7\\downloaded_packages\npackage 'tidyverse' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\Tina\\AppData\\Local\\Temp\\RtmpwRHWb7\\downloaded_packages\n\n\n\nlibrary(magrittr) # needs to be run every time you start R and want to use %>%\nlibrary(vctrs)\n\n\nlibrary(readr)\nexam_data <- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#plot-qq-plot",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#plot-qq-plot",
    "title": "In-class_Ex04",
    "section": "Plot QQ plot",
    "text": "Plot QQ plot\nQQ plot examine the sample data, so write sample=ENGLISH in the ggplot aes. Create stat_qq with normality distribution, and one line from the sample.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH))+\n  stat_qq()+\n  stat_qq_line()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#running-code",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#running-code",
    "title": "Take-home_Ex01",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#toyota-corolla-case-with-linear-regression",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#toyota-corolla-case-with-linear-regression",
    "title": "Hands-on_Ex04",
    "section": "Toyota Corolla case with linear regression",
    "text": "Toyota Corolla case with linear regression\n\nImport the data\n\nresale_car <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncolnames(resale_car)\n\n [1] \"Id\"               \"Model\"            \"Price\"            \"Age_08_04\"       \n [5] \"Mfg_Month\"        \"Mfg_Year\"         \"KM\"               \"Quarterly_Tax\"   \n [9] \"Weight\"           \"Guarantee_Period\" \"HP_Bin\"           \"CC_bin\"          \n[13] \"Doors\"            \"Gears\"            \"Cylinders\"        \"Fuel_Type\"       \n[17] \"Color\"            \"Met_Color\"        \"Automatic\"        \"Mfr_Guarantee\"   \n[21] \"BOVAG_Guarantee\"  \"ABS\"              \"Airbag_1\"         \"Airbag_2\"        \n[25] \"Airco\"            \"Automatic_airco\"  \"Boardcomputer\"    \"CD_Player\"       \n[29] \"Central_Lock\"     \"Powered_Windows\"  \"Power_Steering\"   \"Radio\"           \n[33] \"Mistlamps\"        \"Sport_Model\"      \"Backseat_Divider\" \"Metallic_Rim\"    \n[37] \"Radio_cassette\"   \"Tow_Bar\"         \n\n\n\n\nBuild multiple linear regression\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = resale_car)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = resale_car)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\nCheck multicollinearity\nOne way to detect multicollinearity (whether independent variables are highly correlated) is to calculate the variance inflation factor (VIF) for each independent variable.\n\nc <- check_collinearity(model)\nplot(c)\n\n\n\n\n\n\nChecking normality assumption\nBuild model1(remove one highly correlated variable of mfg_year)\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = resale_car)\ncheck_n <- check_normality(model1)\nplot(check_n)\n\n\n\n\n\n\nCheck model for homogeneity of variances\nSignificance testing for linear regression models assumes that the model errors (or residuals) have constant variance.\n\ncheck_v <- check_heteroscedasticity(model1)\nplot(check_v)\n\n\n\n\n\n\nComplete check\nCan also check all the assumptions by one step. Influential observation is an observation in a dataset that, when removed, dramatically changes the coefficient estimates of a regression model\n\ncheck_model(model1)\n\n\n\n\n\n\nParameter plot\nSee the coefficient direction and strength in the plot.\n\nplot(parameters(model1))\n\n\n\n\n\n\nVisualising Regression Parameters\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualize-uncertainty-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualize-uncertainty-of-point-estimates",
    "title": "Hands-on_Ex04",
    "section": "Visualize uncertainty of point estimates",
    "text": "Visualize uncertainty of point estimates\n\npoint estimate such as mean, addressed with uncertainty like CI se: standard error measures the variability of the sample means, estimate the precision of the sample mean as an estimate of the population mean.\nsd/sqrt(n-1), n-1 can been thought as degree of freedom\n\n\nsum_num <- exam_data %>% \n  group_by(RACE) %>% \n  summarise(n=n(),\n            mean=round(mean(MATHS),2),\n            sd=round(sd(MATHS),2)) %>% \n  mutate(se=round(sd/sqrt(n-1),2))\n\nsum_num\n\n# A tibble: 4 × 5\n  RACE        n  mean    sd    se\n  <chr>   <int> <dbl> <dbl> <dbl>\n1 Chinese   193  76.5  15.7  1.13\n2 Indian     12  60.7  23.4  7.04\n3 Malay     108  57.4  21.1  2.04\n4 Others      9  69.7  10.7  3.79\n\n\n\nknitr::kable(head(sum_num),format='html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.51 \n    15.69 \n    1.13 \n  \n  \n    Indian \n    12 \n    60.67 \n    23.35 \n    7.04 \n  \n  \n    Malay \n    108 \n    57.44 \n    21.13 \n    2.04 \n  \n  \n    Others \n    9 \n    69.67 \n    10.72 \n    3.79 \n  \n\n\n\n\n\n\nStandard error visulization\n\nggplot(sum_num)+\n  geom_errorbar(\n    aes(x=RACE,\n        ymin=mean-se,\n        ymax=mean+se),\n    width=0.2,\n    color='black',\n    alpha=0.9,\n    size=1)+\n  geom_point(aes(x=RACE,\n                 y=mean),\n             stat='identity',\n             color='red',\n             size=2,\n             alpha=1)+\n  ggtitle(\"Standard error of mean \n          maths score by race\")\n\n\n\n\n\n\n95% Confidence interval\nuse qnorm(0.975)=1.96 to calculate lower and upper bound\n\nsum_num$RACE <- factor(sum_num$RACE,levels = sum_num$RACE[order(-sum_num$mean)])\nggplot(sum_num)+\n  geom_errorbar(\n    aes(x=RACE,\n        ymin=mean-1.96*se,\n        ymax=mean+1.96*se),\n    width=0.2,\n    color='black',\n    alpha=0.95,\n    size=1)+\n  geom_point(aes(x=RACE,\n                 y=mean),\n             stat='identity',\n             color='red',\n             size=2,\n             alpha=1)+\n  ggtitle(\"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\nUncertainty of point estimates with interactive error bars\n\ndata <- highlight_key(sum_num)\np <- ggplot(data)+\n  geom_errorbar(\n    aes(x=RACE,\n        ymin=mean-2.32*se,\n        ymax=mean+2.32*se),\n    width=0.2,\n    color='black',\n    alpha=0.99,\n    size=1)+\n  geom_point(aes(x=RACE,\n                 y=mean),\n             stat='identity',\n             color='red',\n             size=2,\n             alpha=1)+\n  ggtitle(\"99% confidence interval of mean maths score by race\")\n\ngg <- highlight(ggplotly(p),\"plotly_selected\")\n\ncrosstalk::bscols(gg,DT::datatable(data),widths = 5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfidence interval plot with ggdist\n\nexam_data %>% \n  ggplot(aes(x=RACE,y=MATHS,))+\n  stat_pointinterval()+\n  labs(\n    title=\"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Confidence-interval plot\")\n\n\n\n\n\n\nUse stat_gradientinterval\n\nexam_data %>% \n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(\n    fill='skyblue',\n    show.legend=TRUE\n  )+\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\"\n  )\n\n\n\n\n\n\nHypothetical Outcome Plots\n\nlibrary(ungeviz)\n\nSample 25 data each time, and plot horizontal line grouping by race.\n\nggplot(data=exam_data,\n       aes(x=factor(RACE),y=MATHS))+\n  geom_point(position=position_jitter(),size=0.5)+\n  geom_hpline(data=sampler(25,group = RACE),color = \"#D55E00\",size=0.1)+\n  theme_bw()\n\n\n\n\n\nTransition_states means create sequence of frames to have animation of changes\nDraw indicating generating a column of sampling, starting with first frame to the twentieth frame\n\n\nggplot(data=exam_data,\n       aes(x=factor(RACE),y=MATHS))+\n  geom_point(position=position_jitter(),size=0.5)+\n  geom_hpline(data=sampler(25,group = RACE),color = \"#D55E00\",size=0.1)+\n  theme_bw()+\n  transition_states(.draw,1,20)\n\n\n\n\n\nexam_data\n\n# A tibble: 322 × 7\n   ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n   <chr>      <chr> <chr>  <chr>     <dbl> <dbl>   <dbl>\n 1 Student321 3I    Male   Malay        21     9      15\n 2 Student305 3I    Female Malay        24    22      16\n 3 Student289 3H    Male   Chinese      26    16      16\n 4 Student227 3F    Male   Chinese      27    77      31\n 5 Student318 3I    Male   Malay        27    11      25\n 6 Student306 3I    Female Malay        31    16      16\n 7 Student313 3I    Male   Chinese      31    21      25\n 8 Student316 3I    Male   Malay        31    18      27\n 9 Student312 3I    Male   Malay        33    19      15\n10 Student297 3H    Male   Indian       34    49      37\n# ℹ 312 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plots-for-fair-comparisons",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plots-for-fair-comparisons",
    "title": "Hands-on_Ex04",
    "section": "Funnel Plots for Fair Comparisons",
    "text": "Funnel Plots for Fair Comparisons\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\n\ncovid19 <- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %>% \n  mutate_if(is.character,as.factor)\ncovid19\n\n# A tibble: 267 × 7\n   `Sub-district ID` City       District `Sub-district` Positive Recovered Death\n               <dbl> <fct>      <fct>    <fct>             <dbl>     <dbl> <dbl>\n 1        3172051003 JAKARTA U… PADEMAN… ANCOL              1776      1691    26\n 2        3173041007 JAKARTA B… TAMBORA  ANGKE              1783      1720    29\n 3        3175041005 JAKARTA T… KRAMAT … BALE KAMBANG       2049      1964    31\n 4        3175031003 JAKARTA T… JATINEG… BALI MESTER         827       797    13\n 5        3175101006 JAKARTA T… CIPAYUNG BAMBU APUS         2866      2792    27\n 6        3174031002 JAKARTA S… MAMPANG… BANGKA             1828      1757    26\n 7        3175051002 JAKARTA T… PASAR R… BARU               2541      2433    37\n 8        3175041004 JAKARTA T… KRAMAT … BATU AMPAR         3608      3445    68\n 9        3171071002 JAKARTA P… TANAH A… BENDUNGAN HIL…     2012      1937    38\n10        3175031002 JAKARTA T… JATINEG… BIDARA CINA        2900      2773    52\n# ℹ 257 more rows\n\n\nPR: proportional ratio, indicates that the data represents the ratio of the numerator (deaths) to the denominator (positive cases) for each sub-district\n\nfunnel_plot(numerator = covid19$Death,denominator = covid19$Positive,\n            group=covid19$`Sub-district`,\n            data_type = \"PR\",\n            x_range = c(0,6500),\n            y_range=c(0,0.05),\n            label=NA,\n            title = \"COVID-19 Fatality Rate by Positive Cases\",\n            x_label=\"Cumulative COVID-19 Positive Cases\",\n            y_label=\"Cumulative Fatality Rate\"\n            )\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\nCustomnized funnel plot\n\nStandard error formula for probability: √ [p (1-p) / n)\nUse reciprocal and square so bigger standard error can have bigger weight in the weighted mean\nseq function generates a sequence of number from 1 to maximum value of positive, incremental by 1, so that can count confidence interval of different sample size\n\n\n\nShow code\ndf <- covid19 %>% \n  mutate(rate=Death/Positive) %>% \n  mutate(rate.se=sqrt(rate*(1-rate)/Positive)) %>% \n  filter(rate>0)\n\nfit.mean <- weighted.mean(df$rate,1/(df$rate.se^2))\n\nnumber <- seq(1,max(df$Positive),1)\nupper.95 <- fit.mean+1.96*sqrt(fit.mean*(1-fit.mean)/number)\nlower.95 <- fit.mean-1.96*sqrt(fit.mean*(1-fit.mean)/number)\nupper.99 <- fit.mean+3.29*sqrt(fit.mean*(1-fit.mean)/number)\nlower.99 <- fit.mean-3.29*sqrt(fit.mean*(1-fit.mean)/number)\ntable <- data.frame(upper.95,lower.95,upper.99,lower.99,number,fit.mean)\n\np <-ggplot(df,aes(x=Positive,y=rate))+\n  geom_point(aes(label=(label=`Sub-district`),alpha=0.4))+\n  geom_line(data=table,aes(x=number,y=upper.95),size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\")+\n  geom_line(data=table,aes(x=number,y=lower.95),size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\")+\n  geom_line(data=table,aes(x=number,y=upper.99),size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\")+\n   geom_line(data=table,aes(x=number,y=lower.99),size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\")+\n  geom_hline(data=table,aes(yintercept=fit.mean),size = 0.4, \n             colour = \"grey40\")+\n             coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\n        \np\n\n\n\n\n\n\n\nInteractive plot\n\ninterative_p <-ggplotly(p,tooltip=c(\"label\",\"x\",\"y\"))\ninterative_p"
  }
]